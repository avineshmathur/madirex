{"version":3,"sources":["./src/app/superadmin/auth/change-password.component.ts","./src/app/superadmin/auth/change-password.component.html","./src/app/superadmin/superadmin.component.ts","./src/app/superadmin/superadmin.component.html","./src/app/superadmin/layout/header/header.component.ts","./src/app/superadmin/layout/header/header.component.html","./src/app/superadmin/client/client-send-message.component.ts","./src/app/superadmin/client/client-send-message.component.html","./src/app/superadmin/auth/forgot-password.component.ts","./src/app/superadmin/auth/forgot-password.component.html","./src/app/superadmin/superadmin.module.ts","./src/app/superadmin/client/client-register.component.ts","./src/app/superadmin/client/client-register.component.html","./src/app/superadmin/layout/footer/footer.component.ts","./src/app/superadmin/layout/footer/footer.component.html","./src/app/superadmin/layout/sidebar/sidebar.component.ts","./src/app/superadmin/layout/sidebar/sidebar.component.html","./src/app/superadmin/client/client-update.component.ts","./src/app/superadmin/client/client-update.component.html","./src/app/superadmin/client/client-archived.component.ts","./src/app/superadmin/client/client-archived.component.html","./src/app/superadmin/layout/layout.component.ts","./src/app/superadmin/layout/layout.component.html","./src/app/superadmin/client/message.component.ts","./src/app/superadmin/client/message.component.html","./src/app/superadmin/auth/reset-password.component.ts","./src/app/superadmin/auth/reset-password.component.html","./src/app/superadmin/client/client.component.ts","./src/app/superadmin/client/client.component.html","./src/app/superadmin/auth/login.component.ts","./src/app/superadmin/auth/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAG1B;;;;;;;;;ICY9B,0EACD;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,yGACJ;;;IAMK,0EACD;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,yGACJ;;;IAMQ,0EACJ;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6GACJ;;;IAES,uEAAsD;IAAA,uDACtD;IAAA,4DAAO;;;IAD+C,0DACtD;IADsD,6HACtD;;;IAFT,0EACS;IAAA,6HAAsD;IAE1D,4DAAM;;;IAHkE,mHAAmD;IACjH,0DAA+C;IAA/C,gHAA+C;;;IAMzD,sEAA2E;;;AD7BhF,MAAM,uBAAuB;IAKnC,YAAoB,WAAwB,EAChC,gBAAkC,EAClC,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QANrB,gBAAW,GAAX,WAAW,CAAa;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QATtC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAyBvB,eAAU,GAAG,EAAC,aAAa,EAAE,EAAE,EAAC,aAAa,EAAE,EAAE,EAAC,iBAAiB,EAAE,EAAE,EAAC,CAAC;QAC5E,uBAAkB,GAAG;YACpB,aAAa,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,oCAAoC;aAC1D;YACD,aAAa,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,oCAAoC;gBACvD,SAAS,EAAE,gDAAM,CAAC,qCAAqC;aAC1D;YACD,iBAAiB,EAAE;gBACjB,UAAU,EAAE,gDAAM,CAAC,wCAAwC;gBAC3D,UAAU,EAAG,gDAAM,CAAC,oCAAoC;aACzD;SACH,CAAC;QA7BC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC7C,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAChF,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1C,EAAC,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IACjD,CAAC;IAED,sBAAsB,CAAC,GAAc;QAClC,OAAO,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IACjH,CAAC;IAiBJ,MAAM;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBACjD;iBACH;aACF;SACH;QACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC5M,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnB,IAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACvC;qBAAI;oBACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAM,CAAC,0BAA0B,CAAC,CAAC;iBACvD;gBACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YACjC,CAAC,EAAC,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAI;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACP,CAAC;;8FAhFW,uBAAuB;uGAAvB,uBAAuB;QCbpC,yEACE;QACA,yEACE;QAAA,wEAAkC;QAAA,0EAAe;QAAA,4DAAK;QACxD,4DAAM;QAEN,yEACD;QAAA,yEACK;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACC;QAAA,2EACL;QADqD,oJAAY,YAAQ,IAAC;QAC1E,2EACI;QAAA,2EACG;QAAA,wEACH;QAAA,sHACD;QAEL,4DAAM;QACC,4DAAM;QACN,2EACD;QAAA,2EACG;QAAA,wEACH;QAAA,sHACD;QAEL,4DAAM;QACC,4DAAM;QACR,2EACC;QAAA,2EACG;QAAA,wEACA;QAAA,sHACJ;QAEJ,sHACS;QAGV,4DAAM;QACD,4DAAM;QACN,8EACC;QAAA,wHAAoE;QACpE,oEACJ;QAAA,4DAAS;QACP,4DAAO;QACL,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAxCsB,2DAAgC;QAAhC,6FAAgC;QAG0H,0DAA0F;QAA1F,gNAA0F;QAC/P,0DAAoE;QAApE,sIAAoE;QAOiG,0DAA0F;QAA1F,iNAA0F;QAC/P,0DAAoE;QAApE,sIAAoE;QAOiH,0DAA0I;QAA1I,sQAA0I;QAC5T,0DAAwE;QAAxE,0IAAwE;QAGhF,0DAAuE;QAAvE,yIAAuE;QAOjE,0DAAe;QAAf,6EAAe;;6FD7BpB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEX;;;;AAShC,MAAM,mBAAmB;IAE/B,YACW,KAAqB,EACpB,aAA6B;QAD9B,UAAK,GAAL,KAAK,CAAgB;QACpB,kBAAa,GAAb,aAAa,CAAgB;QAHxC,6BAAwB,GAAW,gDAAM,CAAC,2BAA2B,CAAC;QAIlE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACxE,CAAC;IACD,QAAQ;IAEN,CAAC;;sFATS,mBAAmB;mGAAnB,mBAAmB;QCXhC,yEACE;QACA,yEACE;QAAA,wEAAkC;QAAA,oEAAS;QAAA,4DAAK;QAElD,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEACF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAPa,2DAAgC;QAAhC,0JAAgC;;6FDFtC,mBAAmB;cAN/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACP;AAEZ;;;;AAMxB,MAAM,eAAe;IAK3B,YAAqB,aAA4B,EAAU,gBAAkC;QAAxE,kBAAa,GAAb,aAAa,CAAe;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJ7F,gBAAW,GAAU,IAAI,IAAI,EAAE,CAAC;QAChC,aAAQ,GAAW,gDAAM,CAAC,SAAS,CAAC;QAEpC,mBAAc,GAAW,gDAAM,CAAC,mBAAmB,CAAC;QAEnD,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,aAAa,CAAC,yBAAyB,EAAE,CAAC;IACjF,CAAC;IACC,QAAQ;IACR,CAAC;IAED,MAAM;QACL,kDAAI,CAAC,IAAI,CAAC;YACT,KAAK,EAAE,gDAAM,CAAC,iBAAiB;YAC/B,IAAI,EAAE,gDAAM,CAAC,gBAAgB;YAC/B,IAAI,EAAE,UAAU;YACd,gBAAgB,EAAE,IAAI;YACtB,iBAAiB,EAAE,gDAAM,CAAC,+BAA+B;YACzD,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,KAAK;YACrB,aAAa,EAAE,KAAK;SACtB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAChB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;aAChC;QACJ,CAAC,CAAC;IACD,CAAC;;8EA1BS,eAAe;+FAAf,eAAe;QCT5B,yEACC;QACA,4EACC;QAAA,kEAA0B;QAC3B,4DAAS;QAEP,wEACD;QAEM,wEACE;QAAA,uEACE;QAAA,0EAA0D;QAAA,uDAAoC;QAAA,4DAAO;QACrG,oEACF;QAAA,4DAAI;QAEJ,yEACE;QAAA,wEACE;QAAA,oEAA0D;QAC1D,6EACF;QAAA,4DAAI;QACJ,sEAAoC;QACpC,yEACE;QADkD,mIAAS,YAAQ,IAAC;QACpE,oEAAkE;QAClE,oEACF;QAAA,4DAAI;QACN,4DAAM;QACR,4DAAK;QACZ,4DAAK;QACN,4DAAM;;QAjBgE,0DAAoC;QAApC,mGAAoC;QACtD,0DAAsB;QAAtB,gJAAsB;;6FDH7D,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AAGvC;;;;;;;;;ICclB,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,qGACJ;;;IAKA,0EACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,qGACJ;;;IAMA,sEAA2E;;;ADnB5F,MAAM,0BAA0B;IAQrC,YAAoB,WAAwB,EAClC,gBAAkC,EAClC,aAA4B,EAC5B,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QAPnB,gBAAW,GAAX,WAAW,CAAa;QAClC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QAZvC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAkDvB,eAAU,GAAG,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,WAAW,EAAE,EAAE,EAAC,CAAC;QAC5D,uBAAkB,GAAG;YAChB,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,WAAW,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,UAAU,EAAE;gBACV,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,QAAQ,EAAE;gBACR,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;SACH,CAAC;QAvDG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC5C,CAAC;IAEJ,QAAQ;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpD,oCAAoC;QACpC,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAEzD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAE9B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBAC9B,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;oBAC1B,QAAQ,EAAE,GAAG;oBACb,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;iBACrB,CAAC,CAAC;YACL,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SAGJ;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAED,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,OAAO,EAAG,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAqBD,MAAM;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC;QAClC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBACjD;iBACH;aACF;SACH;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACnQ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnB,IAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACvC;qBAAI;oBACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAM,CAAC,yBAAyB,CAAC,CAAC;iBACtD;gBACD,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC,EAAC,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAM;YACJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACN,CAAC;;oGA9GW,0BAA0B;0GAA1B,0BAA0B;QCdvC,yEACE;QACA,yEACE;QAAA,wEAAkC;QAAA,uEAAY;QAAA,4DAAK;QACrD,4DAAM;QAKN,yEACD;QAAA,yEACK;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACR;QAAA,2EACgB;QAD6B,uJAAY,YAAQ,IAAC;QAClD,2EACI;QAAA,wEACA;QAAA,yHACI;QAER,4DAAM;QAEN,2EACI;QAAA,2EAAqP;QACrP,yHACI;QAER,4DAAM;QACF,wEACZ;QAAA,wEACA;QAAA,wEACQ;QAAA,8EACI;QAAA,2HAAoE;QAChE,0EACR;QAAA,4DAAS;QACT,iEACN;QAAA,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7Ba,2DAA6B;QAA7B,0FAA6B;QAEwH,0DAAmF;QAAnF,yMAAmF;QAC9N,0DAA6D;QAA7D,+HAA6D;QAMoF,0DAAmF;QAAnF,yMAAmF;QACpO,0DAA6D;QAA7D,+HAA6D;QAQ5D,0DAAe;QAAf,6EAAe;;6FDnBhC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,sCAAsC,CAAC;aACpD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAG1B;;;;;;;;;ICYf,0EACJ;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAGM,sEAA2E;;;ADN7F,MAAM,uBAAuB;IAInC,YAAoB,WAAwB,EAChC,gBAAkC,EAClC,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACd,KAAqB,EACpB,aAA6B;QANvB,gBAAW,GAAX,WAAW,CAAa;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACd,UAAK,GAAL,KAAK,CAAgB;QACpB,kBAAa,GAAb,aAAa,CAAgB;QARxC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAgB1B,eAAU,GAAG,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC;QACzB,uBAAkB,GAAG;YACnB,OAAO,EAAE;gBACN,UAAU,EAAE,gDAAM,CAAC,6BAA6B;gBAChD,OAAO,EAAE,gDAAM,CAAC,2BAA2B;aAC9C;SACD,CAAC;QAdD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC3C,CAAC;IACD,QAAQ;QACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAE,CAAE;SACxD,CAAC,CAAC;IACV,CAAC;IAQC,MAAM;QACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBACjD;iBACH;aACF;SACH;QACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAChG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnB,IAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACvC;qBAAI;oBACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAM,CAAC,2BAA2B,CAAC,CAAC;iBACxD;gBACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACnD,CAAC,EAAC,KAAK,CAAC,EAAE;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;gBACtC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAI;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACP,CAAC;;8FA/DW,uBAAuB;uGAAvB,uBAAuB;QCfpC,yEACC;QAAA,yEACC;QAAA,yEACC;QAAA,yEACS;QAAA,yEACE;QAAA,yEACG;QAAA,yEACC;QAAA,yEACI;QAAA,yEACC;QAAA,oEACC;QAAA,0EAAkC;QAAA,iFAAqB;QAAA,4DAAK;QAC5D,yEAAgB;QAAA,2KAA+G;QAAA,4DAAI;QACrI,4DAAM;QACN,4EACE;QAD8C,oJAAY,YAAQ,IAAC;QACnE,2EACG;QAAA,wEACA;QAAA,sHACJ;QAEC,4DAAM;QACN,8EACC;QAAA,wHAAoE;QACpE,4EACD;QAAA,4DAAS;QACV,4DAAO;QACR,iEACA;QAAA,0EACE;QAAA,yEAAyC;QAAA,2FAA+B;QAAA,4DAAI;QAC9E,4DAAM;QACP,4DAAM;QACV,4DAAM;QACT,4DAAM;QACR,4DAAM;QACT,4DAAM;QACb,4DAAM;QACP,4DAAM;QACP,4DAAM;;QAvB+B,2DAAgC;QAAhC,6FAAgC;QAEyG,0DAAoF;QAApF,0MAAoF;QAClO,0DAA8D;QAA9D,gIAA8D;QAK/D,0DAAe;QAAf,6EAAe;;6FDNjC,uBAAuB;cANnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AACX;AACM;AACL;AACmB;AACF;AACE;AACtC;AACO;AACgB;AACU;AACH;AACA;AACL;AACF;AACiB;AACJ;AACI;AAEO;AACpF,kEAAkE;AAEd;AACU;;;AAE9D,MAAM,oBAAoB,GAAG,gDAAM,CAAC,gBAAgB,GAAC,gDAAM,CAAC,cAAc,GAAC,gDAAM,CAAC,WAAW,CAAC;AAC9F,MAAM,6BAA6B,GAAG,gDAAM,CAAC,gBAAgB,GAAC,gDAAM,CAAC,cAAc,GAAC,gDAAM,CAAC,qBAAqB,CAAC;AACjH,MAAM,4BAA4B,GAAG,gDAAM,CAAC,gBAAgB,GAAC,gDAAM,CAAC,cAAc,GAAC,gDAAM,CAAC,oBAAoB,CAAC;AAC/G,MAAM,6BAA6B,GAAG,gDAAM,CAAC,gBAAgB,GAAC,gDAAM,CAAC,cAAc,GAAC,gDAAM,CAAC,qBAAqB,CAAC;AAEjH,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAe;QAC1B,gBAAgB,EAAE,CAAC,4EAAwB,CAAC;QAC5C,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,yEAAmB;gBAC9B,IAAI,EAAE;oBACJ,KAAK,EAAE,gDAAM,CAAC,gBAAgB;oBAC9B,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,gDAAM,CAAC,gBAAgB,EAAC,GAAG,EAAE,aAAa,EAAC,EAAC,EAAC,KAAK,EAAE,gDAAM,CAAC,gBAAgB,EAAC,CAAC;iBAC7F;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,uFAAuB;gBAClC,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,6BAA6B,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBACzH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,yEAAe;gBAC1B,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,oBAAoB,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBAChH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,0FAAuB;gBAClC,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,6BAA6B,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBACzH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,0FAAuB;gBAClC,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,6BAA6B,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBACzH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,sFAAqB;gBAChC,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,2BAA2B,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBACvH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAE,iGAA0B;gBACrC,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,0BAA0B,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBACtH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,2EAAgB;gBAC3B,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,sBAAsB,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBAClH;gBACD,WAAW,EAAE,CAAC,uDAAc,CAAC;aAC9B;SACF;KACF;IACD;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,oEAAc;gBACzB,IAAI,EAAE;oBACJ,KAAK,EAAE,oBAAoB;oBAC3B,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,oBAAoB,EAAC,GAAG,EAAE,mBAAmB,EAAC,EAAC,EAAC,KAAK,EAAE,oBAAoB,EAAC,CAAC;iBAC7F;aACF;SACF;KACF;IACD;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,iBAAiB;gBACvB,SAAS,EAAE,uFAAuB;gBAClC,IAAI,EAAE;oBACJ,KAAK,EAAE,6BAA6B;oBACpC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,GAAG,EAAE,6BAA6B,EAAC,EAAC,EAAC,KAAK,EAAE,6BAA6B,EAAC,CAAC;iBACzH;aACF;SACF;KACF;IACD;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,qFAAsB;gBACjC,IAAI,EAAE;oBACJ,KAAK,EAAE,4BAA4B;oBACnC,IAAI,EAAE,CAAC,EAAC,KAAK,EAAE,4BAA4B,EAAC,GAAG,EAAE,4BAA4B,EAAC,EAAC,EAAC,KAAK,EAAE,4BAA4B,EAAC,CAAC;iBACtH;aACF;SACF;KACF;IACD;QACE,IAAI,EAAC,IAAI;QACT,UAAU,EAAC,aAAa;KACzB;CACF,CAAC;AAeK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,mBAJhB,EAEV,YAXQ;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,0DAAW;YACZ,uBAAuB;YACtB,kEAAmB;YACnB,oEAAgB;SACjB;mIAMU,gBAAgB,mBALZ,yEAAe,EAAC,yEAAmB,EAAC,oEAAc,EAAC,uFAAuB,EAAC,qFAAsB,EAAC,uFAAuB,EAAC,mFAAgB,EAAC,gFAAe,EAAC,gFAAe,EAAE,yEAAe,EAAE,0FAAuB,EAAE,sFAAqB,EAAE,0FAAuB,EAAE,iGAA0B,EAAE,2EAAgB,aAP/T,4DAAY,EAAE,8DAEd,0DAAW;QACZ,uBAAuB;QACtB,kEAAmB;QACnB,oEAAgB;6FAOP,gBAAgB;cAd5B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC7B,0DAAW;oBACZ,uBAAuB;oBACtB,kEAAmB;oBACnB,oEAAgB;iBACjB;gBACD,YAAY,EAAE,CAAC,yEAAe,EAAC,yEAAmB,EAAC,oEAAc,EAAC,uFAAuB,EAAC,qFAAsB,EAAC,uFAAuB,EAAC,mFAAgB,EAAC,gFAAe,EAAC,gFAAe,EAAE,yEAAe,EAAE,0FAAuB,EAAE,sFAAqB,EAAE,0FAAuB,EAAE,iGAA0B,EAAE,2EAAgB,CAAC;gBAClU,SAAS,EAAE,EAEV;aACF;;;;;;;;;;;;;;ACzKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AAGvC;;;;;;;;;ICe9B,0EACD;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,wGACF;;;IAMC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,uGACF;;;IAMC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAMG,0EACD;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,0GACF;;;IAMG,0EACD;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAKC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,yGACF;;;IAOC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,uGACF;;;IAKC,0EACC;IAAA,uDACD;IAAA,4DAAM;;;IADL,0DACD;IADC,qGACD;;;IAMA,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,qGACF;;;IAQE,6EAA+D;IAAA,uDAAgB;IAAA,4DAAS;;;IAA9C,iFAAoB;IAAC,0DAAgB;IAAhB,iFAAgB;;;IAEhF,0EACC;IAAA,uDACD;IAAA,4DAAM;;;IADL,0DACD;IADC,wGACD;;;IAOC,6EAAwD;IAAA,uDAAc;IAAA,4DAAS;;;IAA1C,+EAAkB;IAAC,0DAAc;IAAd,+EAAc;;;IAEvE,0EACC;IAAA,uDACD;IAAA,4DAAM;;;IADL,0DACD;IADC,sGACD;;;IASC,6EAAsD;IAAA,uDAAa;IAAA,4DAAS;;;IAAxC,8EAAiB;IAAC,0DAAa;IAAb,8EAAa;;;IAEpE,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,mGACF;;;IAKC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAOC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAYC,sEAA2E;;;ADtI9E,MAAM,uBAAuB;IAUnC,YAAoB,WAAwB,EACjC,gBAAkC,EAClC,aAA4B,EAC5B,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QAPpB,gBAAW,GAAX,WAAW,CAAa;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QAfvC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAKxB,WAAM,GAAQ,EAAE,CAAC;QAgGhB,eAAU,GAAG,EAAC,YAAY,EAAE,EAAE,EAAC,WAAW,EAAE,EAAE,EAAC,UAAU,EAAE,EAAE,EAAC,cAAc,EAAE,EAAE,EAAC,UAAU,EAAE,EAAE,EAAC,aAAa,EAAE,EAAE,EAAC,WAAW,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC,MAAM,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,CAAC;QACjO,uBAAkB,GAAG;YAChB,YAAY,EAAE;gBACZ,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,wBAAwB;aAC/C;YACC,WAAW,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,sBAAsB;aAC7C;YACC,UAAU,EAAE;gBACV,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,sBAAsB;aAC7C;YACD,cAAc,EAAE;gBACZ,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,uBAAuB;aAC9C;YACD,UAAU,EAAE;gBACV,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAChD,SAAS,EAAE,gDAAM,CAAC,uBAAuB;aAC3C;YACC,aAAa,EAAE;gBACb,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,uBAAuB;aAC9C;YACC,WAAW,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACD,SAAS,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACD,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aAClD;YACC,OAAO,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,MAAM,EAAE;gBACN,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACD,SAAS,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,qBAAqB;aAC5C;YACD,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAChD,SAAS,EAAE,gDAAM,CAAC,yBAAyB;aAC7C;SACH,CAAC;QA1IG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC5C,CAAC;IAEJ,QAAQ;QACL,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,IAAI,wDAAS,CAAC;YACtC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC1B,CAAC,CAAC;QAEL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,cAAc,CAAC,CAAC,CAAC;YACnF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAChF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/E,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACpF,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACjF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACnF,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7E,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,eAAe,CAAC,CAAC,CAAC;SAClF,CAAC,CAAC;IAEL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACnC,CAAC,EAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC1D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAED,aAAa,CAAC,OAAe;QAC3B,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC3C,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAEM,UAAU,CAAC,IAAI;QACpB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QAC3B,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;YAAE,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;QAC1C,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;YAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACpC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAwDF,MAAM;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACrC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBACjD;iBACH;aACF;SACH;QACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACrrB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnB,IAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACvC;qBAAI;oBACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAM,CAAC,0BAA0B,CAAC,CAAC;iBACvD;gBACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YACjC,CAAC,EAAC,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,kCAAkC;gBACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAI;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACP,CAAC;IAED,WAAW,CAAC,KAAU;QACrB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;;8FAvMW,uBAAuB;uGAAvB,uBAAuB;QCdpC,yEACE;QACA,yEACE;QAAA,wEAAkC;QAAA,kFAAuB;QAAA,4DAAK;QAChE,4DAAM;QAKN,yEACD;QAAA,yEACK;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACC;QAAA,2EACG;QAD6C,oJAAY,YAAQ,IAAC;QAClE,2EACP;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAChF,wEACG;QAAA,sHACD;QAEK,4DAAM;QACN,2EACE;QAAA,2EACR;QAAA,6EAAyB;QAAA,sEAAU;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACrE,wEACV;QAAA,sHACC;QAEO,4DAAM;QAEN,2EACR;QAAA,6EAAyB;QAAA,qEAAS;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACpE,wEACV;QAAA,sHACC;QAEO,4DAAM;QACR,4DAAM;QACN,2EACP;QAAA,6EAAyB;QAAA,yEAAa;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAClF,wEACG;QAAA,sHACD;QAEK,4DAAM;QACN,2EACE;QAAA,2EACR;QAAA,6EAAyB;QAAA,oEAAQ;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC7E,wEACE;QAAA,sHACD;QAEO,4DAAM;QACN,2EACR;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACjF,wEACA;QAAA,sHACC;QAEO,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACR;QAAA,6EAAyB;QAAA,sEAAU;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC/E,wEACA;QAAA,sHACC;QAEO,4DAAM;QACN,2EACR;QAAA,6EAAyB;QAAA,oEAAQ;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnE,wEACV;QAAA,sHACC;QAEO,4DAAM;QACR,4DAAM;QACN,2EACP;QAAA,6EAAyB;QAAA,mEAAO;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC5E,wEACC;QAAA,sHACC;QAEK,4DAAM;QAEd,2EACU;QAAA,2EACR;QAAA,6EAAyB;QAAA,0EAAc;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnF,8EACC;QADsD,wJAAU,wCAAoC,IAAC;QACrG,8EAAiB;QAAA,6EAAiB;QAAA,4DAAS;QAC3C,4HAA+D;QAChE,4DAAS;QACT,sHACC;QAEO,4DAAM;QAEN,2EACR;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACjF,8EACC;QADoD,wJAAU,sCAAkC,IAAC;QACjG,8EAAiB;QAAA,2EAAe;QAAA,4DAAS;QACzC,4HAAwD;QACzD,4DAAS;QACT,sHACC;QAEO,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACR;QAAA,8EAAyB;QAAA,wEAAW;QAAA,6EAA4B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAChF,+EACC;QAAA,+EAAiB;QAAA,2EAAc;QAAA,4DAAS;QACxC,8HAAsD;QACvD,4DAAS;QACT,wHACC;QAEK,4DAAM;QACJ,4EACR;QAAA,8EAAyB;QAAA,qEAAQ;QAAA,6EAA4B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnE,yEACV;QAAA,wHACC;QAEO,4DAAM;QACR,4DAAM;QAEN,4EACP;QAAA,8EAAyB;QAAA,iFAAoB;QAAA,6EAA4B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAChF,8EACR;QADe,oJAAQ,uBAAmB,IAAC;QAAnC,4DACR;QAAA,wHACC;QAEK,4DAAM;QAUN,+EACN;QAAA,0HAAoE;QACpE,8EACF;QAAA,4DAAS;QACD,kEACF;QAAA,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAhJsB,2DAAgC;QAAhC,6FAAgC;QAGuG,0DAAyF;QAAzF,gNAAyF;QAC3O,0DAAmE;QAAnE,qIAAmE;QAOuF,0DAAwF;QAAxF,+MAAwF;QACpP,0DAAkE;QAAlE,oIAAkE;QAOuF,0DAAuF;QAAvF,8MAAuF;QAChP,0DAAiE;QAAjE,mIAAiE;QAO0F,0DAA2F;QAA3F,kNAA2F;QACpP,0DAAqE;QAArE,uIAAqE;QAOuE,0DAAuF;QAAvF,8MAAuF;QACnO,0DAAiE;QAAjE,mIAAiE;QAMuG,0DAA0F;QAA1F,iNAA0F;QACpQ,0DAAoE;QAApE,sIAAoE;QAQlE,0DAAgB;QAAhB,sFAAgB;QAAiJ,+MAAwF;QAC3P,0DAAkE;QAAlE,oIAAkE;QAMtD,0DAAgB;QAAhB,sFAAgB;QAA2I,6MAAsF;QAC7P,0DAAgE;QAAhE,kIAAgE;QAO0E,0DAAsF;QAAtF,6MAAsF;QAChO,0DAAgE;QAAhE,kIAAgE;QAQkC,0DAAsF;QAAtF,6MAAsF;QAEpL,0DAAiC;QAAjC,kFAAiC;QAErC,0DAAgE;QAAhE,kIAAgE;QAO+B,0DAAoF;QAApF,2MAAoF;QAE/K,0DAA4B;QAA5B,+EAA4B;QAEhC,0DAA8D;QAA9D,gIAA8D;QASf,0DAAmF;QAAnF,0MAAmF;QAE9H,0DAA2B;QAA3B,+EAA2B;QAE/B,0DAA6D;QAA7D,+HAA6D;QAMyF,0DAAsF;QAAtF,6MAAsF;QAC5O,0DAAgE;QAAhE,kIAAgE;QAQ6H,0DAAsF;QAAtF,6MAAsF;QACnR,0DAAgE;QAAhE,kIAAgE;QAc/D,0DAAe;QAAf,6EAAe;;6FDtIlB,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAkD;AACP;;;AAMpC,MAAM,eAAe;IAG3B;QAFA,gBAAW,GAAU,IAAI,IAAI,EAAE,CAAC;QAChC,aAAQ,GAAW,gDAAM,CAAC,SAAS,CAAC;IACpB,CAAC;IACf,QAAQ;IACR,CAAC;;8EALS,eAAe;+FAAf,eAAe;QCP5B,4EACI;QAAA,yEACF;QAAA,yEACC;QAAA,uEAAM;QAAA,uDAAiD;;QAAA,uEAAgD;QAAA,uDAAY;QAAA,4DAAI;QAAA,qFAA0B;QAAA,4DAAO;QACzJ,4DAAM;QACJ,4DAAM;QACV,4DAAS;QACT,uEACC;QAAA,mEAA+B;QAChC,4DAAI;;QANK,0DAAiD;QAAjD,qLAAiD;QAAgD,0DAAY;QAAZ,6EAAY;;6FDIzG,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;AACP;;;AAOpC,MAAM,gBAAgB;IAGzB;QAFA,aAAQ,GAAW,gDAAM,CAAC,SAAS,CAAC;QACpC,YAAO,GAAW,gDAAM,CAAC,iBAAiB,CAAC;IAE3C,CAAC;IACD,QAAQ;QACP,CAAC,UAAS,CAAC;YACX,YAAY,CAAC,CAAC,sBAAsB;YAEpC,6BAA6B;YAC/B,CAAC,CAAC,mCAAmC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,CAAC;gBACzD,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;gBACzC,CAAC,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;gBACrC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBACrC,CAAC,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC1C;gBAAA,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,oEAAoE;YACpE,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBACf,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,EAAE;oBAC1B,CAAC,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC3C;gBAAA,CAAC;gBAEF,gEAAgE;gBAChE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;oBAChE,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;oBACtC,CAAC,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBAClC,CAAC,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC9C;gBAAA,CAAC;YACD,CAAC,CAAC,CAAC;YAEH,yFAAyF;YACzF,CAAC,CAAC,yBAAyB,CAAC,CAAC,EAAE,CAAC,iCAAiC,EAAE,UAAS,CAAC;gBAC3E,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,GAAG,EAAE;oBAC1B,IAAI,EAAE,GAAG,CAAC,CAAC,aAAa,EACvB,KAAK,GAAG,EAAE,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;oBACrC,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBAC5C,CAAC,CAAC,cAAc,EAAE,CAAC;iBACrB;YACH,CAAC,CAAC,CAAC;YAEH,8BAA8B;YAC9B,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE;gBACvB,IAAI,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;gBACzC,IAAI,cAAc,GAAG,GAAG,EAAE;oBACvB,CAAC,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC;iBAC/B;qBAAM;oBACJ,CAAC,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;YACL,uCAAuC;YACrC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,iBAAiB,EAAE,UAAS,CAAC;gBACnD,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;oBAC7B,SAAS,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC;iBAClD,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;gBAC1B,CAAC,CAAC,cAAc,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,oBAAoB;IACjC,CAAC;;gFA5DW,gBAAgB;gGAAhB,gBAAgB;QCR7B,wEAEM;QACA,uEACE;QAAA,yEACE;QAAA,oEACA;QACF,4DAAM;QACN,yEAAqC;QAAA,uDAAY;QAAA,4DAAM;QACzD,4DAAI;QAGJ,mEAEA;QAQA,mEAEC;QAAA,wEACC;QAAA,uEACE;QAAA,mEAAqC;QACrC,wEAAM;QAAA,mEAAO;QAAA,4DAAO;QAAA,4DAAI;QAC5B,4DAAK;QAEJ,yEACC;QAAA,yEACE;QAAA,oEAAqC;QACrC,wEAAM;QAAA,oEAAQ;QAAA,4DAAO;QAAA,4DAAI;QAC7B,4DAAK;QAwCL,oEAEA;QA+CF,4DAAK;;QAtHM,0DAAe;QAAf,yIAAe;QAGe,0DAAY;QAAZ,6EAAY;;6FDA5C,gBAAgB;cAL5B,uDAAS;eAAC;gBACP,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACzC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC+B;AAGvC;;;;;;;;;ICe9B,0EACD;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,wGACF;;;IAMC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,uGACF;;;IAMC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAMG,0EACD;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,0GACF;;;IAMG,0EACD;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAKC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,yGACF;;;IAOC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,uGACF;;;IAKC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,qGACF;;;IAMC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,qGACF;;;IAuBE,6EAA+D;IAAA,uDAAgB;IAAA,4DAAS;;;IAA9C,iFAAoB;IAAC,0DAAgB;IAAhB,iFAAgB;;;IAEhF,0EACC;IAAA,uDACD;IAAA,4DAAM;;;IADL,0DACD;IADC,wGACD;;;IAMC,6EAAwD;IAAA,uDAAc;IAAA,4DAAS;;;IAA1C,+EAAkB;IAAC,0DAAc;IAAd,+EAAc;;;IAEvE,0EACC;IAAA,uDACD;IAAA,4DAAM;;;IADL,0DACD;IADC,sGACD;;;IASC,6EAAsD;IAAA,uDAAa;IAAA,4DAAS;;;IAAxC,8EAAiB;IAAC,0DAAa;IAAb,8EAAa;;;IAGpE,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,mGACF;;;IAKC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAOC,0EACC;IAAA,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,sGACF;;;IAIC,sEAA2E;;;AD7I9E,MAAM,qBAAqB;IAWjC,YAAoB,WAAwB,EACjC,gBAAkC,EAClC,aAA4B,EAC5B,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QAPpB,gBAAW,GAAX,WAAW,CAAa;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QAhBvC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAsMvB,eAAU,GAAG,EAAC,YAAY,EAAE,EAAE,EAAC,WAAW,EAAE,EAAE,EAAC,UAAU,EAAE,EAAE,EAAC,cAAc,EAAE,EAAE,EAAC,UAAU,EAAE,EAAE,EAAC,aAAa,EAAE,EAAE,EAAC,WAAW,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC,MAAM,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,SAAS,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAC,CAAC;QACjP,uBAAkB,GAAG;YAChB,YAAY,EAAE;gBACZ,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,wBAAwB;aAC/C;YACC,WAAW,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,sBAAsB;aAC7C;YACC,UAAU,EAAE;gBACV,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,sBAAsB;aAC7C;YACD,cAAc,EAAE;gBACZ,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,uBAAuB;aAC9C;YACD,UAAU,EAAE;gBACV,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAChD,SAAS,EAAE,gDAAM,CAAC,uBAAuB;aAC3C;YACC,aAAa,EAAE;gBACb,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,uBAAuB;aAC9C;YACC,WAAW,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACD,SAAS,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACD,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aAClD;YACC,OAAO,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACC,MAAM,EAAE;gBACN,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aACpD;YACD,SAAS,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAC/C,SAAS,EAAE,gDAAM,CAAC,qBAAqB;aAC5C;YACD,SAAS,EAAE;gBACT,UAAU,EAAE,gDAAM,CAAC,8BAA8B;gBAChD,SAAS,EAAE,gDAAM,CAAC,yBAAyB;aAC7C;YACD,UAAU,EAAE;gBACV,UAAU,EAAE,gDAAM,CAAC,8BAA8B;aAClD;SACH,CAAC;QA7OG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC5C,CAAC;IAEJ,QAAQ;QACL,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACxD,oCAAoC;QAClC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAE3D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBAErC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;gBACvC,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBAC9B,0BAA0B;gBAC1B,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;oBAC/B,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;oBACnC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBACjC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBAC/B,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;oBAC/B,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;oBAC9B,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;oBACrC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBAClD,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBAC9C,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;oBAC5B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU;oBAC/B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;oBAC3B,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;oBACzB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;oBAC7B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;oBAC5B,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;oBAC1B,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBACR,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBACrC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SAGJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;QAEH,GAAG;QAIH,yBAAyB;QAEzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC1B,CAAC,CAAC;QAEL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,cAAc,CAAC,CAAC,CAAC;YACnF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAChF,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/E,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACpF,QAAQ,EAAG,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACjF,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YACnF,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,WAAW,CAAC,CAAC,CAAC;YAC7E,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,eAAe,CAAC,CAAC,CAAC;YACjF,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SACrC,CAAC,CAAC;IAEL,CAAC;IAED,oCAAoC;IACpC,mBAAmB;IACnB,oEAAoE;IACpE,8BAA8B;IAC9B,wCAAwC;IACxC,2BAA2B;IAC3B,kBAAkB;IAClB,4BAA4B;IAC5B,6BAA6B;IAC7B,iCAAiC;IACjC,eAAe;IACf,YAAY;IACZ,yBAAyB;IACzB,yBAAyB;IACzB,KAAK;IACL,GAAG;IAEH,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACnC,CAAC,EAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC1D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACrB,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAED,aAAa,CAAC,OAAe;QAC3B,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACxD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC3C,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAEF,oBAAoB,CAAC,SAAiB;QACrC,IAAI,SAAS,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAC3D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACpB,CAAC,EAAC,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;SACH;aAAM;YACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB;IACF,CAAC;IAED,kBAAkB,CAAC,OAAe;QACjC,IAAI,OAAO,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACzD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC1C,CAAC,EAAC,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;SACH;aAAM;YACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACnB;IACF,CAAC;IAEO,UAAU,CAAC,IAAI;QACpB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QAC3B,MAAM,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAC7B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;YAAE,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;QAC1C,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC;YAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACpC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IA2DF,MAAM;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACnC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBACjD;iBACH;aACF;SACH;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE;YAChC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACnsB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnB,IAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACvC;qBAAI;oBACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAM,CAAC,0BAA0B,CAAC,CAAC;iBACvD;gBACD,kCAAkC;YACnC,CAAC,EAAC,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,kCAAkC;gBACxC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAI;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACP,CAAC;;0FAvSW,qBAAqB;qGAArB,qBAAqB;QCdlC,yEACE;QACA,yEACE;QAAA,wEAAkC;QAAA,gFAAqB;QAAA,4DAAK;QAC9D,4DAAM;QAKN,yEACD;QAAA,yEACK;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACC;QAAA,2EACG;QAD2C,kJAAY,YAAQ,IAAC;QAChE,2EACP;QAAA,6EAAyB;QAAA,uEAAW;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAChF,wEACG;QAAA,oHACD;QAEK,4DAAM;QACN,2EACE;QAAA,2EACR;QAAA,6EAAyB;QAAA,sEAAU;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACrE,wEACV;QAAA,oHACC;QAEO,4DAAM;QAEN,2EACR;QAAA,6EAAyB;QAAA,qEAAS;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACpE,wEACV;QAAA,oHACC;QAEO,4DAAM;QACR,4DAAM;QACN,2EACP;QAAA,6EAAyB;QAAA,yEAAa;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAClF,wEACG;QAAA,oHACD;QAEK,4DAAM;QACN,2EACE;QAAA,2EACR;QAAA,6EAAyB;QAAA,oEAAQ;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC7E,wEACE;QAAA,oHACD;QAEO,4DAAM;QACN,2EACR;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACjF,wEACA;QAAA,oHACC;QAEO,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACR;QAAA,6EAAyB;QAAA,sEAAU;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC/E,wEACA;QAAA,oHACC;QAEO,4DAAM;QACN,2EACR;QAAA,6EAAyB;QAAA,oEAAQ;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnE,wEACV;QAAA,oHACC;QAEO,4DAAM;QACR,4DAAM;QACN,2EACP;QAAA,6EAAyB;QAAA,mEAAO;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAC5E,wEACC;QAAA,oHACC;QAEK,4DAAM;QAiBd,2EACU;QAAA,2EACR;QAAA,6EAAyB;QAAA,0EAAc;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnF,8EACC;QAD+D,sJAAU,wCAAoC,IAAC;QAC9G,8EAAiB;QAAA,6EAAiB;QAAA,4DAAS;QAC3C,0HAA+D;QAChE,4DAAS;QACT,oHACC;QAEO,4DAAM;QACN,2EACR;QAAA,6EAAyB;QAAA,wEAAY;QAAA,4EAA4B;QAAA,6DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACjF,8EACC;QAD6D,sJAAU,sCAAkC,IAAC;QAC1G,8EAAiB;QAAA,2EAAe;QAAA,4DAAS;QACzC,0HAAwD;QACzD,4DAAS;QACT,oHACC;QAEO,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACR;QAAA,8EAAyB;QAAA,wEAAW;QAAA,6EAA4B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAChF,+EACC;QAAA,+EAAiB;QAAA,2EAAc;QAAA,4DAAS;QACxC,4HAAsD;QACvD,4DAAS;QAET,sHACC;QAEK,4DAAM;QACJ,4EACR;QAAA,8EAAyB;QAAA,qEAAQ;QAAA,6EAA4B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QACnE,yEACV;QAAA,sHACC;QAEO,4DAAM;QACR,4DAAM;QAEN,4EACP;QAAA,8EAAyB;QAAA,iFAAoB;QAAA,6EAA4B;QAAA,8DAAC;QAAA,4DAAO;QAAA,4DAAQ;QAChF,yEACR;QAAA,sHACC;QAEK,4DAAM;QACN,yEACA;QAAA,+EACN;QAAA,wHAAoE;QACpE,4EACF;QAAA,4DAAS;QACD,kEACA;QAMF,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7JsB,2DAA8B;QAA9B,2FAA8B;QAGkH,0DAAuF;QAAvF,8MAAuF;QAClP,0DAAiE;QAAjE,mIAAiE;QAOyF,0DAAsF;QAAtF,6MAAsF;QAClP,0DAAgE;QAAhE,kIAAgE;QAOyF,0DAAqF;QAArF,4MAAqF;QAC9O,0DAA+D;QAA/D,iIAA+D;QAOqG,0DAAyF;QAAzF,gNAAyF;QAC3P,0DAAmE;QAAnE,qIAAmE;QAOkF,0DAAqF;QAArF,4MAAqF;QAC1O,0DAA+D;QAA/D,iIAA+D;QAMuG,0DAAwF;QAAxF,+MAAwF;QAChQ,0DAAkE;QAAlE,oIAAkE;QAQyF,0DAAsF;QAAtF,6MAAsF;QACjP,0DAAgE;QAAhE,kIAAgE;QAMsF,0DAAoF;QAApF,2MAAoF;QAC1O,0DAA8D;QAA9D,gIAA8D;QAO4E,0DAAoF;QAApF,2MAAoF;QAC9N,0DAA8D;QAA9D,gIAA8D;QAuB6C,0DAAoF;QAApF,2MAAoF;QAE3L,0DAAiC;QAAjC,kFAAiC;QAErC,0DAA8D;QAA9D,gIAA8D;QAMyC,0DAAkF;QAAlF,yMAAkF;QAErL,0DAA4B;QAA5B,+EAA4B;QAEhC,0DAA4D;QAA5D,8HAA4D;QASJ,0DAAiF;QAAjF,wMAAiF;QAErI,0DAA2B;QAA3B,+EAA2B;QAG/B,0DAA2D;QAA3D,6HAA2D;QAM2F,0DAAoF;QAApF,2MAAoF;QAC1O,0DAA8D;QAA9D,gIAA8D;QAQ2G,0DAAoF;QAApF,2MAAoF;QAC7P,0DAA8D;QAA9D,gIAA8D;QAM7D,0DAAe;QAAf,6EAAe;;6FD7IlB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICqD9B,qEACE;IAAA,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAA0C;IAAA,4DAAK;IACnD,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAAuC;;IAAA,4DAAK;IAclD,4DAAK;;;IAnBC,0DAAsB;IAAtB,sFAAsB;IACtB,0DAA0C;IAA1C,wHAA0C;IAC1C,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAuC;IAAvC,mKAAuC;;AD7C1D,MAAM,uBAAuB;IAMlC,YAAoB,WAAwB,EACjC,gBAAkC,EACjC,aAA4B,EAC7B,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QAPpB,gBAAW,GAAX,WAAW,CAAa;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QAZxC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAYrB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC7C,CAAC;IAEC,QAAQ;QACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACpD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QACjC,CAAC,EAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,kCAAkC;YAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;;8FAhCU,uBAAuB;uGAAvB,uBAAuB;QCb5B,yEAEE;QACA,wEAAkC;QAAA,2EAAgB;QAAA,4DAAK;QAIvD,yEACE;QAkBA,yEACE;QAAA,yEACE;QAAA,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,qEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QAEnB,4DAAK;QACP,4DAAQ;QAWR,yEAEE;QAAA,qHACE;QAqBJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;;QA5BU,2DAA8B;QAA9B,gFAA8B;;6FDvCzC,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICCjD,qEAAyD;;;IAGvD,+EAA6E;;;IAG9E,+EAA6E;;ADGxE,MAAM,eAAe;IAGxB,YAAmB,MAAc,EACrB,gBAAkC,EAClC,aAA4B;QAFrB,WAAM,GAAN,MAAM,CAAQ;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAHpC,WAAM,GAAoC,EAAE,CAAC;QAI7C,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC9C,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC;IAC5E,CAAC;;8EAXQ,eAAe;+FAAf,eAAe;QCV5B,yEACC;QAAA,mHAA+C;;QAC/C,yEACC;QAAA,yEACC;QAAA,uIAAyD;;QACzD,2EAA+B;QAChC,4DAAM;QACN,uIAAyD;;QAC1D,4DAAM;QACP,4DAAM;;QARI,0DAAqC;QAArC,4JAAqC;QAGzB,0DAAqC;QAArC,4JAAqC;QAGtC,0DAAqC;QAArC,4JAAqC;;6FDG7C,eAAe;cAL3B,uDAAS;eAAC;gBACP,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAS9B;;;;;;;;;;IC2DX,qEACE;IAAA,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,qEAAI;IAAA,wDAA4C;;IAAA,4DAAK;IAWvD,4DAAK;;;IAfC,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAsB;IAAtB,sFAAsB;IACtB,0DAAwB;IAAxB,wFAAwB;IACxB,0DAA4C;IAA5C,wKAA4C;;ADzD/D,MAAM,gBAAgB;IAQ3B,YAAoB,WAAwB,EACjC,gBAAkC,EACjC,aAA4B,EAC7B,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QAPpB,gBAAW,GAAX,WAAW,CAAa;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QAdxC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAGvB,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAU3C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC7C,CAAC;IAEA,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;SACf,CAAC;QAEF,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,yCAAyC;QACzC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC7C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,kCAAkC;YAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;;gFA7CU,gBAAgB;gGAAhB,gBAAgB;QCfrB,yEAEE;QACA,wEAAkC;QAAA,mEAAQ;QAAA,4DAAK;QAI/C,yEACE;QAAA,oEAiBM;QACN,yEACE;QAAA,yEACE;QAAA,2EACE;QAAA,wEACE;QAAA,qEACE;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACf,4DAAK;QACP,4DAAQ;QAWR,yEAEE;QAiBA,6GACE;QAiBJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;;QA/D6E,0DAAuB;QAAvB,oFAAuB;QAuC1F,2DAAgC;QAAhC,iFAAgC;;6FDpD3C,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAG1B;;;;;;;;;ICmBzB,0EACO;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,sGACJ;;;IAaQ,0EACJ;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,6GACJ;;;IAEY,uEAAqD;IAAA,uDACrD;IAAA,4DAAO;;;IAD8C,0DACrD;IADqD,6HACrD;;;IAFZ,0EACY;IAAA,4HAAqD;IAEzD,4DAAM;;;IAH8D,kHAAkD;IAC5G,0DAA8C;IAA9C,+GAA8C;;;IAM3D,sEAA2E;;;ADjC7F,MAAM,sBAAsB;IAKlC,YAAoB,WAAwB,EAChC,gBAAkC,EAClC,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACpB,aAA6B;QANvB,gBAAW,GAAX,WAAW,CAAa;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACpB,kBAAa,GAAb,aAAa,CAAgB;QATxC,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAuBvB,eAAU,GAAG,EAAC,UAAU,EAAE,EAAE,EAAC,iBAAiB,EAAE,EAAE,EAAC,CAAC;QACvD,uBAAkB,GAAG;YAClB,UAAU,EAAE;gBACR,UAAU,EAAE,gDAAM,CAAC,gCAAgC;gBACnD,SAAS,EAAE,gDAAM,CAAC,iCAAiC;aACtD;YACD,iBAAiB,EAAE;gBACjB,UAAU,EAAE,gDAAM,CAAC,wCAAwC;gBAC3D,UAAU,EAAG,gDAAM,CAAC,gCAAgC;aACrD;SACH,CAAC;QAxBD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC3C,CAAC;IACD,QAAQ;QACP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAG,yDAAU,CAAC,OAAO,CAAC,gDAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAChF,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1C,EAAC,EAAC,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IACnD,CAAC;IACD,sBAAsB,CAAC,GAAc;QAChC,OAAO,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,KAAK,GAAG,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;IAC9G,CAAC;IAaJ,MAAM;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACpC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAC9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBACjD;iBACH;aACF;SACH;QACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACrK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnB,IAAG,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC;oBAC/C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;iBACvC;qBAAI;oBACJ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gDAAM,CAAC,0BAA0B,CAAC,CAAC;iBACvD;gBACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACnD,CAAC,EAAC,KAAK,CAAC,EAAE;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;SACJ;aAAI;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACP,CAAC;;4FA1EW,sBAAsB;sGAAtB,sBAAsB;QCfnC,yEACC;QAAA,yEACC;QAAA,yEACC;QAAA,yEACS;QAAA,yEACE;QAAA,yEACG;QAAA,yEACC;QAAA,yEACI;QAAA,yEACC;QAAA,oEACC;QAAA,0EAAkC;QAAA,2EAAe;QAAA,4DAAK;QACvD,4DAAM;QACP,4EACE;QAD6C,mJAAY,YAAQ,IAAC;QAClE,2EACC;QAAA,2EACG;QAAA,wEACA;QAOX,qHACO;QAEX,4DAAM;QACO,4DAAM;QACR,2EACC;QAAA,2EACG;QAAA,wEACA;QAOA,qHACJ;QAEJ,qHACY;QAGb,4DAAM;QACD,4DAAM;QACN,8EACC;QAAA,uHAAoE;QACpE,oEACD;QAAA,4DAAS;QACV,4DAAO;QACR,iEACA;QAAA,0EACE;QAAA,yEAAyC;QAAA,2FAA+B;QAAA,4DAAI;QAC9E,4DAAM;QACP,4DAAM;QACV,4DAAM;QACT,4DAAM;QACR,4DAAM;QACT,4DAAM;QACb,4DAAM;QACP,4DAAM;QACP,4DAAM;;QAnD+B,2DAA+B;QAA/B,4FAA+B;QAGkH,0DAAsF;QAAtF,4MAAsF;QAQtP,0DAAgE;QAAhE,kIAAgE;QAO6H,0DAAwI;QAAxI,mQAAwI;QAQ1T,0DAAuE;QAAvE,yIAAuE;QAG/E,0DAAsE;QAAtE,wIAAsE;QAOhE,0DAAe;QAAf,6EAAe;;6FDjCjC,sBAAsB;cANlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AASzC;AACyB;;;;;;;;;;;ICyDhC,wEACE;IADqC,+ZAAmC;IACxE,mEAAgC;IAClC,4DAAI;;;;IACJ,wEACE;IADmC,gaAAmC;IACtE,mEAAgC;IAClC,4DAAI;;;;IAnBR,qEACE;IAAA,qEAAI;IAAA,uDAAsB;IAAA,4DAAK;IAC/B,qEAAI;IAAA,uDAA0C;IAAA,4DAAK;IACnD,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAAuC;;IAAA,4DAAK;IAChD,sEACG;IAAA,yEACC;IAAA,oEAA2B;IAC7B,4DAAI;IAAA,mEACJ;IAAA,yEACE;IAAA,oEAA+B;IACjC,4DAAI;IAAA,mEACJ;IAAA,gHACE;IAEF,gHACE;IACE,mEACJ;IAAA,yEACE;IADC,0YAAsC;IACvC,oEAA4B;IAC9B,4DAAI;IACN,4DAAK;IACP,4DAAK;;;IAvBC,0DAAsB;IAAtB,sFAAsB;IACtB,0DAA0C;IAA1C,wHAA0C;IAC1C,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAuB;IAAvB,uFAAuB;IACvB,0DAAuC;IAAvC,oKAAuC;IAErC,0DAAoD;IAApD,kIAAoD;IAGrD,0DAAmD;IAAnD,iIAAmD;IAGnD,0DAAmC;IAAnC,gGAAmC;IAGnC,0DAAiC;IAAjC,8FAAiC;;AD3D5D,+CAA+C;AAOxC,MAAM,eAAe;IAY1B,YAAoB,WAAwB,EACjC,gBAAkC,EACjC,aAA4B,EAC7B,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACf,KAAsB,EACtB,aAA6B;QAPpB,gBAAW,GAAX,WAAW,CAAa;QACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACjC,kBAAa,GAAb,aAAa,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QAlBxC,gCAAgC;QAC9B,YAAO,GAAY,KAAK,CAAC;QACzB,eAAU,GAAW,CAAC,CAAC;QAMvB,cAAS,GAAwB,EAAE,CAAC;QACpC,cAAS,GAAiB,IAAI,4CAAO,EAAO,CAAC;QAU7C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC7C,CAAC;IAGA,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,cAAc;YAC1B,UAAU,EAAE,EAAE;SACf,CAAC;QAEF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,WAAW;QACT,yCAAyC;QACzC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,EAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,kCAAkC;YAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,QAAQ,CAAC,EAAU,EAAC,QAAe;QACjC,IAAI,OAAO,CAAC,mCAAmC,CAAC,EAAE;YAChD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,kCAAkC;gBAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,IAAI,OAAO,CAAC,qCAAqC,CAAC,EAAE;YAClD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBACjD,kCAAkC;gBAClC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvC,UAAU,CAAC;oBACP,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACtB,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,kBAAkB;YACpB,CAAC,EAAC,KAAK,CAAC,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,kCAAkC;gBAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAA0B,EAAE,EAAE;YAC5D,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;;8EA3FU,eAAe;+FAAf,eAAe;kEAOb,qEAAkB;;;;;QCxBzB,yEAEE;QACA,wEAAkC;QAAA,kEAAO;QAAA,4DAAK;QAI9C,yEACE;QAAA,yEACE;QAAA,uEACA;QAAA,uEACE;QAAA,0EACE;QAAA,kEAA2B;QAC7B,4DAAO;QACP,0EAAmB;QAAA,2EAAe;QAAA,4DAAO;QAC3C,4DAAI;QACJ,4DAAI;QACJ,wEACA;QAAA,yEACE;QAAA,2EACE;QAAA,oEAA2B;QAC7B,4DAAO;QACP,2EAAmB;QAAA,0EAAc;QAAA,4DAAO;QAC1C,4DAAI;QACJ,4DAAI;QACN,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QAWR,yEAEE;QAAA,8GACE;QAyBJ,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;;QAxD6E,2DAAuB;QAAvB,oFAAuB;QAwB1F,2DAAmD;QAAnD,gFAAmD;;6FDnC9D,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;+kBASG,SAAS;kBADR,uDAAS;mBAAC,qEAAkB,EAAE,EAAC,MAAM,EAAE,KAAK,EAAC;;;;;;;;;;;;;;AEzBlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAG1B;;;;;;;;;ICWf,0EACJ;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,mGACJ;;;IAIQ,0EACJ;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,sGACJ;;;IAGM,sEAA2E;;;ADX7F,MAAM,cAAc;IAKzB,YAAoB,WAAwB,EACnC,gBAAkC,EAClC,MAAqB,EACrB,OAA0B,EAC1B,MAAe,EACd,KAAsB,EACtB,aAA6B;QANnB,gBAAW,GAAX,WAAW,CAAa;QACnC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAe;QACrB,YAAO,GAAP,OAAO,CAAmB;QAC1B,WAAM,GAAN,MAAM,CAAS;QACd,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAgB;QATvC,YAAO,GAAG,KAAK,CAAC;QAChB,eAAU,GAAW,CAAC,CAAC;QAoBvB,eAAU,GAAG,EAAC,OAAO,EAAE,EAAE,EAAC,UAAU,EAAG,EAAE,EAAC,CAAC;QAC5C,uBAAkB,GAAG;YACnB,OAAO,EAAE;gBACP,UAAU,EAAE,gDAAM,CAAC,6BAA6B;gBAChD,OAAO,EAAE,gDAAM,CAAC,2BAA2B;aAC3C;YACD,UAAU,EAAE;gBACX,UAAU,EAAE,gDAAM,CAAC,gCAAgC;aACpD;SACF,CAAC;QApBC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;IAC5C,CAAC;IAEF,QAAQ;QACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAE,CAAE;YACrD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IACL,CAAC;IAYD,MAAM;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,EAAE;YACnC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;gBAChD,KAAK,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,EAAE;oBAChC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE;wBAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;qBAC/C;iBACF;aACF;SACF;QACA,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;gBAClH,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAClD,CAAC,EAAC,KAAK,CAAC,EAAE;gBACL,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACL;aAAI;YACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACJ,CAAC;;4EAjEW,cAAc;8FAAd,cAAc;QCf3B,yEACC;QAAA,yEACC;QAAA,yEACC;QAAA,yEACS;QAAA,yEACE;QAAA,yEACG;QAAA,yEACC;QAAA,yEACI;QAAA,yEACC;QAAA,oEACC;QAAA,0EAAkC;QAAA,yEAAa;QAAA,4DAAK;QACtD,4DAAM;QACN,4EACE;QADqC,2IAAY,YAAQ,IAAC;QAC1D,2EACG;QAAA,wEACA;QAAA,6GACJ;QAEC,4DAAM;QACN,2EACG;QAAA,wEACA;QAAA,6GACJ;QAEC,4DAAM;QACN,8EACC;QAAA,+GAAoE;QACpE,mEACD;QAAA,4DAAS;QACV,4DAAO;QACR,iEACA;QAAA,0EACE;QAAA,yEAAmD;QAAA,4EAAgB;QAAA,4DAAI;QACzE,4DAAM;QACP,4DAAM;QACV,4DAAM;QACT,4DAAM;QACR,4DAAM;QACT,4DAAM;QACb,4DAAM;QACP,4DAAM;QACP,4DAAM;;QA7B+B,2DAAuB;QAAvB,oFAAuB;QAEkH,0DAA2E;QAA3E,iMAA2E;QACzN,0DAAqD;QAArD,uHAAqD;QAKuD,0DAA2E;QAA3E,iMAA2E;QACvL,0DAAwD;QAAxD,0HAAwD;QAKzD,0DAAe;QAAf,6EAAe;;6FDXjC,cAAc;cAN1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC","file":"superadmin-superadmin-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\tchangePasswordForm: FormGroup;\n    loading: boolean = false;\n    showErrors: number = 0;\n\n\tconstructor(private formBuilder: FormBuilder,\n    \tprivate adminAuthService: AdminAuthService,\n    \tprivate toastr: ToastrService,\n    \tprivate spinner: NgxSpinnerService,\n    \tprivate router : Router,\n    \tprivate route : ActivatedRoute,\n    \tprivate commonService : CommonService) { \n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n    this.commonService.checkSuperAdminLogin();\n\t}\n\n\tngOnInit() {\n\t\tthis.changePasswordForm = this.formBuilder.group({\n        \toldPassword: ['', Validators.required],\n    \t\tnewPassword: ['', [Validators.required , Validators.pattern(Config.PASSWORD_REGX)]],\n        \tconfirmPassword: ['', Validators.required]\n        },{validator: this.passwordMatchValidator});\n  \t}\n\n  \tpasswordMatchValidator(frm: FormGroup) {\n      return frm.controls['newPassword'].value === frm.controls['confirmPassword'].value ? null : {'mismatch': true};\n    }\n\n    attributes = {'oldPassword': '','newPassword': '','confirmPassword': ''};\n\tvalidationMessages = {\n\t\t'oldPassword': {\n      \t\t'required': Config.OLD_PASSWORD_REQUIRED_VALIDATION_MSG\n  \t\t},\n  \t\t'newPassword': {\n      \t\t'required': Config.NEW_PASSWORD_REQUIRED_VALIDATION_MSG,\n      \t\t'pattern': Config.NEW_PASSWORD_NOT_VALID_VALIDATION_MSG\n  \t\t},\n  \t\t'confirmPassword': {\n    \t\t'required': Config.CONFIRM_PASSWORD_REQUIRED_VALIDATION_MSG,\n    \t\t'mismatch' : Config.NEW_PASSWORD_MISMATCH_VALIDATION_MSG\n  \t\t}\n\t};\n\n\tsubmit() {\n  \t\tthis.loading = true;\n     \tthis.showErrors = 1;\n    \tconst form = this.changePasswordForm;\n    \tfor (const field in this.attributes) {\n      \t\tthis.attributes[field] = '';\n      \t\tconst control = form.get(field);\n      \t\tif (control && !control.valid) {\n        \t\tconst messages = this.validationMessages[field];\n        \t\tfor (const key in control.errors) {\n          \t\t\tif (this.attributes[field] == '') {\n              \t\t\tthis.attributes[field] += messages[key] + ' ';\n          \t\t\t}\n        \t\t}\n      \t\t}\n    \t}\n    \tif (this.changePasswordForm.valid) {\n    \t\tthis.showErrors = 0;\n        \tthis.spinner.show();\n    \t\tthis.adminAuthService.changePassword(this.changePasswordForm.get('oldPassword').value,this.changePasswordForm.get('newPassword').value,this.changePasswordForm.get('confirmPassword').value).then((result) => {\n    \t\t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n          \t\tif(result['message'] && result['message'] != ''){\n          \t\t\tthis.toastr.success(result['message']);\t\n          \t\t}else{\n          \t\t\tthis.toastr.success(Config.RESET_PASSWORD_SUCCESS_MSG);\n          \t\t}\n          \t\tthis.changePasswordForm.reset();\n          \t},error => {\n        \t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n        \t\tthis.changePasswordForm.reset();\n\t\t\t\tthis.toastr.error(error);\n     \t\t}); \n    \t}else{\n        \tthis.loading = false;\n      \t}\n\t}\n}","<div class=\"container-fluid\">\n  <!-- Page Heading -->\n  <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 class=\"h3 mb-0 text-gray-800\">Change Password</h1>\n  </div>\n  <!-- Content Row -->\n  <div class=\"row\">\n\t<div class=\"col-xl-12 col-md-12 mb-4\">\n      <div class=\"card shadow h-100 py-2\">\n        <div class=\"card-body\">\n          <div class=\"row no-gutters align-items-center\">\n            <div class=\"col \">\n            \t<form class=\"\" [formGroup]=\"changePasswordForm\" (ngSubmit)=\"submit()\" novalidate>\n    \t\t\t\t<div class=\"form-group\">\n        \t\t\t\t<div class=\"input-group\"> \n          \t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputOldPassword\" aria-describedby=\"oldPasswordHelp\" placeholder=\"Enter Old Password...\" formControlName=\"oldPassword\" [ngClass]=\"{ 'is-invalid': showErrors && !changePasswordForm.controls.oldPassword.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !changePasswordForm.controls.oldPassword.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.oldPassword }}\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</div>\n          \t\t\t</div>\n          \t\t\t<div class=\"form-group\">\n        \t\t\t\t<div class=\"input-group\"> \n          \t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputNewPassword\" aria-describedby=\"newPasswordHelp\" placeholder=\"Enter New Password...\" formControlName=\"newPassword\" [ngClass]=\"{ 'is-invalid': showErrors && !changePasswordForm.controls.newPassword.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !changePasswordForm.controls.newPassword.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.newPassword }}\n\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t</div>\n          \t\t\t</div>\n        \t\t\t<div class=\"form-group\">\n        \t\t\t\t<div class=\"input-group\">\n          \t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\" aria-describedby=\"confirmPasswordHelp\" placeholder=\"Enter Confrim Password...\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': showErrors && (!changePasswordForm.controls.confirmPassword.valid || changePasswordForm.hasError('mismatch'))}\">\n          \t\t\t\t\t<div *ngIf=\"showErrors && !changePasswordForm.controls.confirmPassword.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.confirmPassword }}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div *ngIf=\"showErrors && changePasswordForm.controls.confirmPassword.valid\" [hidden]=\"!changePasswordForm.hasError('mismatch')\" class=\"invalid-feedback\">\n          \t\t\t\t\t\t<span *ngIf=\"changePasswordForm.hasError('mismatch')\">{{validationMessages.confirmPassword.mismatch}}\n          \t\t\t\t\t\t</span>\n      \t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n        \t\t\t</div>\n        \t\t\t<button type=\"submit\" class=\"btn btn-primary btn-block\">\n        \t\t\t\t<span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n        \t\t\t\tSubmit\n    \t\t\t\t</button>\n        \t\t</form>  \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Config } from './../constant';\nimport { CommonService } from '../_services';\n\n@Component({\n  selector: 'app-superadmin',\n  templateUrl: './superadmin.component.html',\n  styleUrls: ['./superadmin.component.css']\n})\n\nexport class SuperAdminComponent implements OnInit {\n  underConstructionImgPath: string = Config.UNDER_CONSTRUCTION_IMG_PATH;\n\tconstructor(\n\t\t  private route: ActivatedRoute,\n    \tprivate commonService : CommonService) { \n      this.commonService.setPageTitle(this.route.snapshot.data['title']);\n\t}\n\tngOnInit() {\n\n  \t}\n}","<div class=\"container-fluid\">\n  <!-- Page Heading -->\n  <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 class=\"h3 mb-0 text-gray-800\">Dashboard</h1>\n    <!-- <a href=\"#\" class=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm\"><i class=\"fas fa-download fa-sm text-white-50\"></i> Generate Report</a> -->\n  </div>\n  <!-- Content Row -->\n  <div class=\"row\">\n    <div class=\"col-xl-12 col-md-12 mb-4\">\n      <div class=\"card shadow h-100 py-2\">\n        <div class=\"card-body\">\n          <div class=\"row no-gutters align-items-center\">\n            <div class=\"col text-center\">\n              <img [src]=\"underConstructionImgPath\" alt=\"under-construction-image\" class=\"img-fluid\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Config } from '../../../constant';\nimport { AdminAuthService, CommonService } from '../../../_services';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'superadmin-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\tcurrentDate : Date = new Date();\n\tappTitle: string = Config.APP_TITLE;\n\tloggedInSuperAdminDetails:any;\n\tprofileImgPath: string = Config.PROFILE_NO_IMG_PATH;\n\tconstructor( private commonService: CommonService, private adminAuthService: AdminAuthService ) { \n\t\tthis.loggedInSuperAdminDetails = this.commonService.getLoggedInSuperAdminData();\n\t}\n  \tngOnInit(): void {\n  \t}\n\n  \tlogout(){\n  \t\tSwal.fire({\n  \t\t\ttitle: Config.SWAL_LOGOUT_TITLE,\n  \t\t\ttext: Config.SWAL_LOGOUT_TEXT,\n\t\t\ticon: 'question',\n  \t\t\tshowCancelButton: true,\n  \t\t\tconfirmButtonText: Config.SWAL_LOGOUT_CONFIRM_BUTTON_TEXT,\n  \t\t\tallowOutsideClick: false,\n  \t\t\tallowEscapeKey: false,\n  \t\t\tallowEnterKey: false\n\t\t}).then((result) => {\n  \t\t\tif (result.isConfirmed) {\n    \t\t\tthis.adminAuthService.logout();\n  \t\t\t}\n\t\t})\n  \t}\n}\n","<nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n\t<!-- Sidebar Toggle (Topbar) -->\n\t<button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\n\t\t<i class=\"fa fa-bars\"></i>\n\t</button>\n\t<!-- Topbar Navbar -->\n  \t<ul class=\"navbar-nav ml-auto\">\n\t\t<!-- <div class=\"topbar-divider d-none d-sm-block\"></div> -->\n\t\t<!-- Nav Item - User Information -->\n        <li class=\"nav-item dropdown no-arrow\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span class=\"mr-2 d-none d-lg-inline text-gray-600 small\">{{ loggedInSuperAdminDetails.name }}</span>\n            <img class=\"img-profile rounded-circle\" [src]=\"profileImgPath\">\n          </a>\n          <!-- Dropdown - User Information -->\n          <div class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n            <a class=\"dropdown-item\" routerLink=\"change-password\">\n              <i class=\"fas fa-cogs fa-sm fa-fw mr-2 text-gray-400\"></i>\n              Change Password\n            </a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"javascript:void(0);\" (click)=\"logout()\">\n              <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n              Logout\n            </a>\n          </div>\n        </li>\n\t</ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService, ClientService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client-send-message',\n  templateUrl: './client-send-message.component.html',\n  styleUrls: ['./client-send-message.component.less']\n})\nexport class ClientSendMessageComponent implements OnInit {\n  \n  sendMessageForm: FormGroup;\n  loading: boolean = false;\n  showErrors: number = 0;\n  resData: any;\n  user: any;\n\n  constructor(private formBuilder: FormBuilder,\n    private adminAuthService: AdminAuthService,\n    private clientService: ClientService,      \n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router : Router,\n    private route : ActivatedRoute,\n    private commonService : CommonService) { \n      this.commonService.setPageTitle(this.route.snapshot.data['title']);\n      this.commonService.checkSuperAdminLogin();\n    }\n\n\tngOnInit() {\n  const userId = this.route.snapshot.paramMap.get('id');\n    //getProfileById(clientId: number) {\n    if (userId) {\n      this.clientService.getProfileById(+userId).then((result) => {\n        \n        this.resData = result;\n        this.user = this.resData.data;\n        \n        this.sendMessageForm.patchValue({\n          useremail: this.user.email,\n          fromuser: \"1\",\n          touser: this.user.id\n        });\n      },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n      });\n      \n      \n    } else {\n      this.user = null;\n    }  \n    \n    this.sendMessageForm = this.formBuilder.group({\n      subject:  ['', Validators.required],\n      message: ['', Validators.required],      \n      useremail: ['', Validators.required],\n      fromuser: ['', Validators.required],\n      touser: ['', Validators.required]\n    });\n  }\n  \n  attributes = {'subject': '','message': '','useremail': ''};\n\tvalidationMessages = {\n      'subject': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'message': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'useremail': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'fromuser': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'touser': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t}\n\t};\n  \n  submit() {\n    console.log(this.attributes);\n  \t\tthis.loading = true;\n     \tthis.showErrors = 1;\n    \tconst form = this.sendMessageForm;\n    \tfor (const field in this.attributes) {\n      \t\tthis.attributes[field] = '';\n      \t\tconst control = form.get(field);\n      \t\tif (control && !control.valid) {\n        \t\tconst messages = this.validationMessages[field];\n        \t\tfor (const key in control.errors) {\n          \t\t\tif (this.attributes[field] == '') {\n              \t\t\tthis.attributes[field] += messages[key] + ' ';\n          \t\t\t}\n        \t\t}\n      \t\t}\n    \t}\n    \tif (this.sendMessageForm.valid) {\n    \t\tthis.showErrors = 0;\n        this.spinner.show();\n    \t\tthis.clientService.sendMessage(this.sendMessageForm.get('subject').value,this.sendMessageForm.get('message').value,this.sendMessageForm.get('useremail').value,this.sendMessageForm.get('fromuser').value,this.sendMessageForm.get('touser').value).then((result) => {\n    \t\t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n          \t\tif(result['message'] && result['message'] != ''){\n          \t\t\tthis.toastr.success(result['message']);\t\n          \t\t}else{\n          \t\t\tthis.toastr.success(Config.MESSAGE_SEND_SUCCESSFULLY);\n          \t\t}\n          \t\tthis.sendMessageForm.reset();\n          \t},error => {\n        \t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n\t\t\t\tthis.toastr.error(error);\n     \t\t}); \n    \t} else {\n        this.loading = false;\n      }\n\t}\n\n}","<div class=\"container-fluid\">\n  <!-- Page Heading -->\n  <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 class=\"h3 mb-0 text-gray-800\">Send Message</h1>\n  </div>\n\t<!--<tr *ngFor=\"let doctor of doctors\">\n      <th>{{doctor.first_name}}</th>\n\t</tr>-->\n  <!-- Content Row -->\n  <div class=\"row\">\n\t<div class=\"col-xl-12 col-md-12 mb-4\">\n      <div class=\"card shadow h-100 py-2\">\n        <div class=\"card-body\">\n          <div class=\"row no-gutters align-items-center\">\n            <div class=\"col \">\n\t\t\t\t<form class=\"\" [formGroup]=\"sendMessageForm\" (ngSubmit)=\"submit()\" novalidate>\n                    <div class=\"form-group row\">\n                        <input type=\"text\" class=\"form-control\" id=\"inputSubject\" aria-describedby=\"newPasswordHelp\" placeholder=\"Subject...\" formControlName=\"subject\" [ngClass]=\"{ 'is-invalid': showErrors && !sendMessageForm.controls.subject.valid }\">\n                        <div *ngIf=\"showErrors && !sendMessageForm.controls.subject.valid\" class=\"invalid-feedback\"> \n                            {{ attributes.subject }}\n                        </div>\n                    </div>\n                    \n                    <div class=\"form-group row\">                           \n                        <textarea type=\"textarea\" id=\"inputMessage\" aria-describedby=\"newPasswordHelp\" placeholder=\"Message...\" formControlName=\"message\" rows=\"8\" cols=\"100\" [ngClass]=\"{ 'is-invalid': showErrors && !sendMessageForm.controls.message.valid }\"></textarea>\n                        <div *ngIf=\"showErrors && !sendMessageForm.controls.message.valid\" class=\"invalid-feedback\"> \n                            {{ attributes.message }}\n                        </div>\t\n                    </div> \n                        <input type=\"hidden\" class=\"form-control\" id=\"inputId\" formControlName=\"useremail\">\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" class=\"form-control\" id=\"inputId\" formControlName=\"fromuser\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" class=\"form-control\" id=\"inputId\" formControlName=\"touser\">  \n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                            Send Message\n                    </button>\n                    <hr>                \n              </form> \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./auth.component.css']\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\tforgotPasswordForm: FormGroup;\n    loading: boolean = false;\n    showErrors: number = 0;\n\tconstructor(private formBuilder: FormBuilder,\n    \tprivate adminAuthService: AdminAuthService,\n    \tprivate toastr: ToastrService,\n    \tprivate spinner: NgxSpinnerService,\n    \tprivate router : Router,\n      private route: ActivatedRoute,\n      \tprivate commonService : CommonService) { \n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n\t\tthis.commonService.checkSuperAdminLogin();\n\t}\n\tngOnInit() {\n\t\tthis.forgotPasswordForm = this.formBuilder.group({\n            email: ['', [Validators.required,Validators.email ] ]\n        });\n\t}\n\tattributes = {'email': ''};\n  \tvalidationMessages = {\n    \t'email': {\n      \t\t'required': Config.EMAIL_REQUIRED_VALIDATION_MSG,\n      \t\t'email': Config.EMAIL_FORMAT_VALIDATION_MSG\n\t  \t}\n  \t};\n  \tsubmit() {\n  \t\tthis.loading = true;\n     \tthis.showErrors = 1;\n    \tconst form = this.forgotPasswordForm;\n    \tfor (const field in this.attributes) {\n      \t\tthis.attributes[field] = '';\n      \t\tconst control = form.get(field);\n      \t\tif (control && !control.valid) {\n        \t\tconst messages = this.validationMessages[field];\n        \t\tfor (const key in control.errors) {\n          \t\t\tif (this.attributes[field] == '') {\n              \t\t\tthis.attributes[field] += messages[key] + ' ';\n          \t\t\t}\n        \t\t}\n      \t\t}\n    \t}\n    \tif (this.forgotPasswordForm.valid) {\n    \t\tthis.showErrors = 0;\n        \tthis.spinner.show();\n    \t\tthis.adminAuthService.forgotPassword(this.forgotPasswordForm.get('email').value).then((result) => {\n    \t\t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n          \t\tif(result['message'] && result['message'] != ''){\n          \t\t\tthis.toastr.success(result['message']);\t\n          \t\t}else{\n          \t\t\tthis.toastr.success(Config.FORGOT_PASSWORD_SUCCESS_MSG);\n          \t\t}\n          \t\tthis.router.navigate(['/superadmin/login']);\n  \t\t\t},error => {\n        \t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n        \t\tthis.forgotPasswordForm.reset();\n\t\t\t\tthis.toastr.error(error);\n     \t\t}); \n    \t}else{\n        \tthis.loading = false;\n      \t}\n\t}\n}","<div class=\"container\">\n\t<div class=\"row justify-content-center\">\n\t\t<div class=\"col-xl-6 col-lg-8 col-md-5\">\n\t\t\t<div class=\"card o-hidden border-0 shadow-lg my-5\">\n          \t\t<div class=\"card-body p-0\">\n            \t\t<div class=\"row\">\n              \t\t\t<div class=\"col-lg-12\">\n              \t\t\t\t<div class=\"p-5\">\n                  \t\t\t\t<div class=\"text-center\">\n                  \t\t\t\t\t<img src=\"assets/img/logo.png\" alt=\"app-logo\" class=\"logo\">\n                    \t\t\t\t<h1 class=\"h4 text-gray-900 mb-4\">Forgot Your Password?</h1>\n                    \t\t\t\t<p class=\"mb-4\">We get it, stuff happens. Just enter your email address below and we'll send you a link to reset your password!</p>\n                  \t\t\t\t</div>\n\t                  \t\t\t<form class=\"\" [formGroup]=\"forgotPasswordForm\" (ngSubmit)=\"submit()\" novalidate>\n\t                    \t\t\t<div class=\"form-group\">\n\t                      \t\t\t\t<input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': showErrors && !forgotPasswordForm.controls.email.valid }\">\n\t                      \t\t\t\t<div *ngIf=\"showErrors && !forgotPasswordForm.controls.email.valid\" class=\"invalid-feedback\"> \n\t               \t\t\t\t\t\t\t{{ attributes.email }}\n\t            \t\t\t\t\t\t</div>  \n\t                    \t\t\t</div>\n\t                    \t\t\t<button type=\"submit\" class=\"btn btn-primary btn-block\">\n\t                    \t\t\t\t<span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n\t                    \t\t\t\tReset Password\n                    \t\t\t\t</button>\n\t                    \t\t</form>\n                  \t\t\t\t<hr>\n\t                  \t\t\t<div class=\"text-center\">\n\t                    \t\t\t<a class=\"small\" routerLink=\"./../login\">Already have an account? Login!</a>\n\t                  \t\t\t</div>\n\t                  \t\t</div>\n              \t\t\t</div>\n            \t\t</div>\n          \t\t</div>\n        \t</div>\n\t\t</div>\n\t</div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SuperAdminComponent } from './superadmin.component';\nimport { LoginComponent } from './auth/login.component';\nimport { ForgotPasswordComponent } from './auth/forgot-password.component';\nimport { ResetPasswordComponent } from './auth/reset-password.component';\nimport { ChangePasswordComponent } from './auth/change-password.component';\nimport { Config } from '../constant';\nimport { AdminAuthGuard } from '../_guards';\nimport { LayoutComponent } from './layout/layout.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { BlockUIPreventNavigation } from 'ng-block-ui/router';\nimport { ClientComponent } from './client/client.component';\nimport { ClientRegisterComponent } from './client/client-register.component';\nimport { ClientUpdateComponent } from './client/client-update.component';\nimport { ClientArchivedComponent } from './client/client-archived.component';\nimport { formatDate } from '@angular/common';\nimport { ClientSendMessageComponent } from './client/client-send-message.component';\n//import {MatDatepickerModule} from '@angular/material/datepicker'\n\nimport {DataTablesModule} from 'angular-datatables';\nimport { MessageComponent } from './client/message.component';\n\nconst superAdminLoginTitle = Config.SUPERADMIN_TITLE+Config.TITLE_SEPRATOR+Config.LOGIN_TITLE;\nconst superAdminForgotPasswordTitle = Config.SUPERADMIN_TITLE+Config.TITLE_SEPRATOR+Config.FORGOT_PASSWORD_TITLE;\nconst superAdminResetPasswordTitle = Config.SUPERADMIN_TITLE+Config.TITLE_SEPRATOR+Config.RESET_PASSWORD_TITLE;\nconst superAdminChangePasswordTitle = Config.SUPERADMIN_TITLE+Config.TITLE_SEPRATOR+Config.CHANGE_PASSWORD_TITLE;\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    canActivateChild: [BlockUIPreventNavigation],\n    children: [\n      {\n        path: '',\n        component: SuperAdminComponent,\n        data: {\n          title: Config.SUPERADMIN_TITLE,\n          urls: [{title: Config.SUPERADMIN_TITLE,url: '/superadmin'},{title: Config.SUPERADMIN_TITLE}]\n        },\n        canActivate: [AdminAuthGuard]\n      },\n      {\n        path: 'change-password',\n        component: ChangePasswordComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/change-password'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      },\n      {\n        path: 'client',\n        component: ClientComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/client'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      },\n      {\n        path: 'client-archived',\n        component: ClientArchivedComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/client-archived'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      },\n      {\n        path: 'client-register',\n        component: ClientRegisterComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/client-register'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      },\n      {\n        path: 'client-update/:id',\n        component: ClientUpdateComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/client-update'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      },\n      {\n        path: 'send-message/:id',\n        component: ClientSendMessageComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/send-message'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      },\n      {\n        path: 'messages',\n        component: MessageComponent,\n        data: {\n          title: superAdminChangePasswordTitle,\n          urls: [{title: superAdminChangePasswordTitle,url: '/superadmin/messages'},{title: superAdminChangePasswordTitle}]\n        },\n        canActivate: [AdminAuthGuard],\n      }\n    ]\n  },\n  {\n    path: '',\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n        data: {\n          title: superAdminLoginTitle,\n          urls: [{title: superAdminLoginTitle,url: '/superadmin/login'},{title: superAdminLoginTitle}]\n        }\n      } \n    ]\n  },\n  {\n    path: '',\n    children: [\n      {\n        path: 'forgot-password',\n        component: ForgotPasswordComponent,\n        data: {\n          title: superAdminForgotPasswordTitle,\n          urls: [{title: superAdminForgotPasswordTitle,url: '/superadmin/forgot-password'},{title: superAdminForgotPasswordTitle}]\n        }\n      } \n    ]\n  },\n  {\n    path: '',\n    children: [\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent,\n        data: {\n          title: superAdminResetPasswordTitle,\n          urls: [{title: superAdminResetPasswordTitle,url: '/superadmin/reset-password'},{title: superAdminResetPasswordTitle}]\n        }\n      } \n    ]\n  },\n  {\n    path:'**',\n    redirectTo:'/superadmin'\n  }\n];\n@NgModule({\n  imports: [\n    CommonModule, \n    RouterModule.forChild(routes),\n    FormsModule,\n   // MatDatepickerModule,\n    ReactiveFormsModule,\n    DataTablesModule\n  ],\n  declarations: [LayoutComponent,SuperAdminComponent,LoginComponent,ForgotPasswordComponent,ResetPasswordComponent,ChangePasswordComponent,SidebarComponent,FooterComponent,HeaderComponent, ClientComponent, ClientRegisterComponent, ClientUpdateComponent, ClientArchivedComponent, ClientSendMessageComponent, MessageComponent],\n  providers: [\n    \n  ],\n})\nexport class SuperAdminModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService, ClientService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client-register',\n  templateUrl: './client-register.component.html',\n  styleUrls: ['./client-register.component.less']\n})\nexport class ClientRegisterComponent implements OnInit {\n\tclientRegisterForm: FormGroup;\n  loading: boolean = false;\n  showErrors: number = 0;\n  resData: any;\n  countries: {};\n  states: {};\n  cities: {};\t\n\tmyDate: any = '';\n\n\tconstructor(private formBuilder: FormBuilder,\n    private adminAuthService: AdminAuthService,\n    private clientService: ClientService,      \n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router : Router,\n    private route : ActivatedRoute,\n    private commonService : CommonService) { \n      this.commonService.setPageTitle(this.route.snapshot.data['title']);\n      this.commonService.checkSuperAdminLogin();\n    }\n\n\tngOnInit() {\n    this.getCountry();\n    let dte = new Date();\n\t\tthis.myDate = this.formatDate(dte);\n    this.clientRegisterForm = new FormGroup({\n      country: new FormControl(''),\n      state: new FormControl(''),\n      city: new FormControl('')\n    });\n    \n\t\tthis.clientRegisterForm = this.formBuilder.group({\n      clinicName: ['', [Validators.required , Validators.pattern(Config.CLNAME_PATTERN)]],\n      firstName: ['', [Validators.required , Validators.pattern(Config.NAME_PATTERN)]],\n      lastName: ['', [Validators.required , Validators.pattern(Config.NAME_PATTERN)]],\n      emailAddress: ['', [Validators.required , Validators.pattern(Config.EMAIL_PATTERN)]],\n      userName:  ['', [Validators.required , Validators.pattern(Config.UNAME_PATTERN)]],\n      phoneNumber: ['', [Validators.required , Validators.pattern(Config.PHONE_PATTERN)]],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      address: ['', Validators.required ],\n      country: ['', Validators.required],\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      zipCode: ['', [Validators.required , Validators.pattern(Config.ZIP_PATTERN)]],\n      keyword: ['', [Validators.required , Validators.pattern(Config.KEYWORD_PATTERN)]],\n    });\n\n  }\n  \n  getCountry() {\n    this.clientService.getCountries().then((result) => {\n        this.resData = result;\n        this.countries = this.resData.data;\n        },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n    });\n  }\n  \n  onChangeCountry(countryId: number) {\n    if (countryId) {\n      this.clientService.getStatesById(countryId).then((result) => {\n        this.resData = result;\n        this.states = this.resData.data.stateList;\n        this.cities = null;\n      },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n      });      \n    } else {\n      this.states = null;\n      this.cities = null;\n    }\n  }\n\n  onChangeState(stateId: number) {\n    if (stateId) {\n      this.clientService.getCitiesById(stateId).then((result) => {\n        this.resData = result;\n        this.cities = this.resData.data.cityList;\n      },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n      });      \n    } else {\n      this.cities = null;\n    }\n  }\n\t\n\tprivate formatDate(date) { \n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n  \n  attributes = {'clinicName': '','firstName': '','lastName': '','emailAddress': '','userName': '','phoneNumber': '','startDate': '','endDate': '','address': '','country': '','state': '','city': '','zipCode': '','keyword': ''};\n\tvalidationMessages = {\n      'clinicName': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.CLNAME_NOT_VALID_MESSAGE\n  \t\t},\n      'firstName': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.NAME_NOT_VALID_MESSAGE\n  \t\t},\n      'lastName': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.NAME_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'emailAddress': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.EMAIL_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'userName': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n      \t'pattern': Config.UNAME_NOT_VALID_MESSAGE\n  \t\t},\n      'phoneNumber': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.PHONE_NOT_VALID_MESSAGE\n  \t\t},\n      'startDate': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'endDate': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n  \t\t'address': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n  \t\t'country': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'state': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'city': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n  \t\t'zipCode': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.ZIP_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'keyword': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n      \t'pattern': Config.KEYWORD_NOT_VALID_MESSAGE\n  \t\t}\n\t};\n\n\tsubmit() { //console.log(this.clientRegisterForm);\n  \t\tthis.loading = true;\n     \tthis.showErrors = 1;\n    \tconst form = this.clientRegisterForm;\n    \tfor (const field in this.attributes) {\n      \t\tthis.attributes[field] = '';\n      \t\tconst control = form.get(field);\n      \t\tif (control && !control.valid) {\n        \t\tconst messages = this.validationMessages[field];\n        \t\tfor (const key in control.errors) {\n          \t\t\tif (this.attributes[field] == '') {\n              \t\t\tthis.attributes[field] += messages[key] + ' ';\n          \t\t\t}\n        \t\t}\n      \t\t}\n    \t}\n    \tif (this.clientRegisterForm.valid) {\n    \t\tthis.showErrors = 0;\n        \tthis.spinner.show();\n    \t\tthis.clientService.clientRegister(this.clientRegisterForm.get('clinicName').value,this.clientRegisterForm.get('firstName').value,this.clientRegisterForm.get('lastName').value,this.clientRegisterForm.get('emailAddress').value,this.clientRegisterForm.get('userName').value,this.clientRegisterForm.get('phoneNumber').value,this.clientRegisterForm.get('startDate').value,this.clientRegisterForm.get('endDate').value,this.clientRegisterForm.get('address').value,this.clientRegisterForm.get('country').value,this.clientRegisterForm.get('state').value,this.clientRegisterForm.get('city').value,this.clientRegisterForm.get('zipCode').value,this.clientRegisterForm.get('keyword').value).then((result) => {\n    \t\t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n          \t\tif(result['message'] && result['message'] != ''){\n          \t\t\tthis.toastr.success(result['message']);\t\n          \t\t}else{\n          \t\t\tthis.toastr.success(Config.RESET_PASSWORD_SUCCESS_MSG);\n          \t\t}\n          \t\tthis.clientRegisterForm.reset();\n          \t},error => {\n        \t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n        \t\t//this.clientRegisterForm.reset();\n\t\t\t\tthis.toastr.error(error);\n     \t\t}); \n    \t}else{\n        \tthis.loading = false;\n      \t}\n\t}\n\t\n\tonBlurEvent(event: any){\n\t\tconsole.log(event.target.value); \n\t}\n}\n","<div class=\"container-fluid\">\n  <!-- Page Heading -->\n  <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 class=\"h3 mb-0 text-gray-800\">New Clinic Registration</h1>\n  </div>\n\t<!--<tr *ngFor=\"let country of countries\">\n      <th>{{country.name}}</th>\n\t</tr>-->\n  <!-- Content Row -->\n  <div class=\"row\">\n\t<div class=\"col-xl-12 col-md-12 mb-4\">\n      <div class=\"card shadow h-100 py-2\">\n        <div class=\"card-body\">\n          <div class=\"row no-gutters align-items-center\">\n            <div class=\"col \">\n            \t<form class=\"\" [formGroup]=\"clientRegisterForm\" (ngSubmit)=\"submit()\" novalidate>\n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Clinic Name<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputClinicName\" aria-describedby=\"newPasswordHelp\" placeholder=\"Clinic Name...\" formControlName=\"clinicName\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.clinicName.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.clinicName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.clinicName }}\n\t\t\t\t\t\t\t\t\t</div> \n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">First Name<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" aria-describedby=\"newPasswordHelp\" placeholder=\"First Name...\" formControlName=\"firstName\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.firstName.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.firstName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.firstName }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n\t\t\t\t\t\t\t\t\t\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Last Name<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputLastName\" aria-describedby=\"newPasswordHelp\" placeholder=\"Last Name...\" formControlName=\"lastName\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.lastName.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.lastName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.lastName }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Email Address<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t<input type=\"email\" class=\"form-control\" id=\"inputEmailAddress\" aria-describedby=\"newPasswordHelp\" placeholder=\"Email Address...\" formControlName=\"emailAddress\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.emailAddress.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.emailAddress.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.emailAddress }}\n\t\t\t\t\t\t\t\t\t</div> \n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Username<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputUserName\" aria-describedby=\"newPasswordHelp\" placeholder=\"Username...\" formControlName=\"userName\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.userName.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.userName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.userName }}\n\t\t\t\t\t\t\t\t\t</div> \n                  </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Phone Number<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputPhoneNumber\" aria-describedby=\"newPasswordHelp\" placeholder=\"Phone Number...(Eg:-000000000000)\" formControlName=\"phoneNumber\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.phoneNumber.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.phoneNumber.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.phoneNumber }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Start Date<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<input min=\"{{myDate}}\" type=\"date\" class=\"form-control\" id=\"inputStartDate\" aria-describedby=\"newPasswordHelp\" placeholder=\"Start Date...\" formControlName=\"startDate\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.startDate.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.startDate.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.startDate }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">End Date<span class=\"mandatorySign\">*</span></label>\n                    <input min=\"{{myDate}}\" type=\"date\" class=\"form-control\" id=\"inputEndDate\" aria-describedby=\"newPasswordHelp\" placeholder=\"End Date...\" formControlName=\"endDate\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.endDate.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.endDate.valid\" class=\"invalid-feedback\"> \n\t\t\t\t\t\t\t\t\t\t\t{{ attributes.endDate }}\n\t\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Address<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputAddress\" aria-describedby=\"newPasswordHelp\" placeholder=\"Address...\" formControlName=\"address\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.address.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.address.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.address }}\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n                \t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Select Country<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<select formControlName=\"country\" class=\"form-control\" (change)=\"onChangeCountry($event.target.value)\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.country.valid }\">\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select country...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let country of countries\" [value]=\"country.id\">{{country.name}}</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.country.valid\" class=\"invalid-feedback\"> \n\t\t\t\t\t\t\t\t\t\t\t{{ attributes.countryId }}\n\t\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n\t\t\t\t\t\t\t\t\t\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Select State<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<select formControlName=\"state\" class=\"form-control\" (change)=\"onChangeState($event.target.value)\"  [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.state.valid }\">\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select state...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" [value]=\"state.id\">{{state.name}}</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.state.valid\" class=\"invalid-feedback\"> \n\t\t\t\t\t\t\t\t\t\t\t{{ attributes.stateId }}\n\t\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                \n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Select City<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<select formControlName=\"city\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.city.valid }\">\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select city...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities\" [value]=\"city.id\">{{city.name}}</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.city.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.city }}\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Zip Code<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputZipCode\" aria-describedby=\"newPasswordHelp\" placeholder=\"Zip Code...\" formControlName=\"zipCode\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.zipCode.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.zipCode.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.zipCode }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                \n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Keyword For Instance<span class=\"mandatorySign\">*</span></label>\n                  <input (blur)=\"onBlurEvent($event)\" type=\"text\" class=\"form-control\" id=\"inputKeyword\" aria-describedby=\"newPasswordHelp\" placeholder=\"Keyword For Instance...\" formControlName=\"keyword\" [ngClass]=\"{ 'is-invalid': showErrors && !clientRegisterForm.controls.keyword.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientRegisterForm.controls.keyword.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.keyword }}\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<!--<div class=\"form-group\">\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<mat-form-field>\n\t\t\t\t\t\t\t\t\t\t<input matInput [matDatepicker] = \"picker\" placeholder = \"Choose a date\">\n\t\t\t\t\t\t\t\t\t\t<mat-datepicker-toggle matSuffix [for] = \"picker\"></mat-datepicker-toggle>\n\t\t\t\t\t\t\t\t\t\t<mat-datepicker #picker></mat-datepicker>\n\t\t\t\t\t\t\t\t\t</mat-form-field>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>-->\n                \n                <button type=\"submit\" class=\"btn btn-primary btn-block\">\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n\t\t\t\t\t\t\t\t\t\tRegister Clinic\n\t\t\t\t\t\t\t\t</button>\n                <hr>\n              </form> \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Config } from '../../../constant';\n@Component({\n  selector: 'superadmin-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\tcurrentDate : Date = new Date();\n\tappTitle: string = Config.APP_TITLE;\n\tconstructor() { }\n  \tngOnInit(): void {\n  \t}\n}\n","<footer class=\"sticky-footer bg-white\">\n    <div class=\"container my-auto\">\n\t\t<div class=\"copyright text-center my-auto\">\n\t\t\t<span>Copyright &copy; {{currentDate | date: 'yyyy'}}, <a id=\"pixinventLink\" href=\"javascript:void(0)\">{{appTitle}}</a>, LLC. All Rights Reserved</span>\n\t\t</div>\n    </div>\n</footer>\n<a class=\"scroll-to-top rounded\" href=\"#page-top\">\n\t<i class=\"fas fa-angle-up\"></i>\n</a>","import { Component, OnInit } from '@angular/core';\nimport { Config } from '../../../constant';\ndeclare var jQuery: any;\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n    appTitle: string = Config.APP_TITLE;\n    appLogo: string = Config.SIDEBAR_LOGO_PATH;\n    constructor() { \n    }\n    ngOnInit() {\n    \t(function($) {\n  \t\t\t\"use strict\"; // Start of use strict\n\n  \t\t\t// Toggle the side navigation\n\t\t\t$(\"#sidebarToggle, #sidebarToggleTop\").on('click', function(e) {\n\t\t\t    $(\"body\").toggleClass(\"sidebar-toggled\");\n\t\t\t    $(\".sidebar\").toggleClass(\"toggled\");\n\t\t\t    if ($(\".sidebar\").hasClass(\"toggled\")) {\n\t\t\t      $('.sidebar .collapse').collapse('hide');\n\t\t\t    };\n  \t\t\t});\n\n  \t\t\t// Close any open menu accordions when window is resized below 768px\n  \t\t\t$(window).resize(function() {\n    \t\t\tif ($(window).width() < 768) {\n      \t\t\t\t$('.sidebar .collapse').collapse('hide');\n    \t\t\t};\n    \n    \t\t\t// Toggle the side navigation when window is resized below 480px\n    \t\t\tif ($(window).width() < 480 && !$(\".sidebar\").hasClass(\"toggled\")) {\n      \t\t\t\t$(\"body\").addClass(\"sidebar-toggled\");\n      \t\t\t\t$(\".sidebar\").addClass(\"toggled\");\n      \t\t\t\t$('.sidebar .collapse').collapse('hide');\n\t\t\t\t};\n  \t\t\t});\n\n  \t\t\t// Prevent the content wrapper from scrolling when the fixed side navigation hovered over\n  \t\t\t$('body.fixed-nav .sidebar').on('mousewheel DOMMouseScroll wheel', function(e) {\n    \t\t\tif ($(window).width() > 768) {\n      \t\t\t\tvar e0 = e.originalEvent,\n        \t\t\tdelta = e0.wheelDelta || -e0.detail;\n      \t\t\t\tthis.scrollTop += (delta < 0 ? 1 : -1) * 30;\n      \t\t\t\te.preventDefault();\n    \t\t\t}\n  \t\t\t});\n\n  \t\t\t// Scroll to top button appear\n  \t\t\t$(document).on('scroll', function() {\n    \t\t\tvar scrollDistance = $(this).scrollTop();\n    \t\t\tif (scrollDistance > 100) {\n      \t\t\t\t$('.scroll-to-top').fadeIn();\n    \t\t\t} else {\n      \t\t\t\t$('.scroll-to-top').fadeOut();\n    \t\t\t}\n  \t\t\t});\n\t\t\t// Smooth scrolling using jQuery easing\n  \t\t\t$(document).on('click', 'a.scroll-to-top', function(e) {\n    \t\t\tvar $anchor = $(this);\n    \t\t\t$('html, body').stop().animate({\n      \t\t\tscrollTop: ($($anchor.attr('href')).offset().top)\n    \t\t\t}, 1000, 'easeInOutExpo');\n    \t\t\te.preventDefault();\n  \t\t\t});\n\t\t})(jQuery); // End of use strict\n\t}\n}\n","<ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n\n      <!-- Sidebar - Brand -->\n      <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" routerLink=\"/superadmin\">\n        <div class=\"sidebar-brand-icon\">\n          <img [src]=\"appLogo\" alt=\"app-logo\" class=\"sidebar-logo\">\n          <!-- <i class=\"fas fa-laugh-wink\"></i> -->\n        </div>\n        <div class=\"sidebar-brand-text mx-3\">{{appTitle}}</div>\n      </a>\n\n      <!-- Divider -->\n      <hr class=\"sidebar-divider my-0\">\n\n      <!-- Nav Item - Dashboard -->\n     <!-- <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/superadmin\">\n          <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n          <span>Dashboard</span></a>\n      </li>-->\n\n      <!-- Divider -->\n      <hr class=\"sidebar-divider\">\n      \n       <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/superadmin/client\">\n          <i class=\"fas fa-fw fa-user-alt\"></i>\n          <span>Clinics</span></a>\n      </li>\n       \n       <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLink=\"/superadmin/messages\">\n          <i class=\"fas fa-fw fa-envelope\"></i>\n          <span>Messages</span></a>\n      </li>\n\n      <!-- Heading -->\n      <!--<div class=\"sidebar-heading\">\n        Interface\n      </div>-->\n\n      <!-- Nav Item - Pages Collapse Menu -->\n      <!--<li class=\"nav-item\">\n        <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n          <i class=\"fas fa-fw fa-cog\"></i>\n          <span>Components</span>\n        </a>\n        <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n          <div class=\"bg-white py-2 collapse-inner rounded\">\n            <h6 class=\"collapse-header\">Custom Components:</h6>\n            <a class=\"collapse-item\" href=\"buttons.html\">Buttons</a>\n            <a class=\"collapse-item\" href=\"cards.html\">Cards</a>\n          </div>\n        </div>\n      </li>-->\n\n      <!-- Nav Item - Utilities Collapse Menu -->\n      <!--<li class=\"nav-item\">\n        <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseUtilities\" aria-expanded=\"true\" aria-controls=\"collapseUtilities\">\n          <i class=\"fas fa-fw fa-wrench\"></i>\n          <span>Utilities</span>\n        </a>\n        <div id=\"collapseUtilities\" class=\"collapse\" aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\n          <div class=\"bg-white py-2 collapse-inner rounded\">\n            <h6 class=\"collapse-header\">Custom Utilities:</h6>\n            <a class=\"collapse-item\" href=\"utilities-color.html\">Colors</a>\n            <a class=\"collapse-item\" href=\"utilities-border.html\">Borders</a>\n            <a class=\"collapse-item\" href=\"utilities-animation.html\">Animations</a>\n            <a class=\"collapse-item\" href=\"utilities-other.html\">Other</a>\n          </div>\n        </div>\n      </li>-->\n\n      <!-- Divider -->\n      <hr class=\"sidebar-divider\">\n\n      <!-- Heading -->\n      <!--<div class=\"sidebar-heading\">\n        Addons\n      </div>-->\n\n      <!-- Nav Item - Pages Collapse Menu -->\n      <!--<li class=\"nav-item\">\n        <a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapsePages\" aria-expanded=\"true\" aria-controls=\"collapsePages\">\n          <i class=\"fas fa-fw fa-folder\"></i>\n          <span>Pages</span>\n        </a>\n        <div id=\"collapsePages\" class=\"collapse\" aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\">\n          <div class=\"bg-white py-2 collapse-inner rounded\">\n            <h6 class=\"collapse-header\">Login Screens:</h6>\n            <a class=\"collapse-item\" href=\"login.html\">Login</a>\n            <a class=\"collapse-item\" href=\"register.html\">Register</a>\n            <a class=\"collapse-item\" href=\"forgot-password.html\">Forgot Password</a>\n            <div class=\"collapse-divider\"></div>\n            <h6 class=\"collapse-header\">Other Pages:</h6>\n            <a class=\"collapse-item\" href=\"404.html\">404 Page</a>\n            <a class=\"collapse-item\" href=\"blank.html\">Blank Page</a>\n          </div>\n        </div>\n      </li>-->\n\n      <!-- Nav Item - Charts -->\n      <!--<li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"charts.html\">\n          <i class=\"fas fa-fw fa-chart-area\"></i>\n          <span>Charts</span></a>\n      </li>-->\n\n      <!-- Nav Item - Tables -->\n      <!--<li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"tables.html\">\n          <i class=\"fas fa-fw fa-table\"></i>\n          <span>Tables</span></a>\n      </li>-->\n\n      <!-- Divider -->\n      <!--<hr class=\"sidebar-divider d-none d-md-block\">-->\n\n      <!-- Sidebar Toggler (Sidebar) -->\n      <!--<div class=\"text-center d-none d-md-inline\">\n        <button class=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\n      </div>-->\n\n    </ul>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService, ClientService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client-update',\n  templateUrl: './client-update.component.html',\n  styleUrls: ['./client-update.component.less']\n})\nexport class ClientUpdateComponent implements OnInit {\nclientUpdateForm: FormGroup;\n  loading: boolean = false;\n  showErrors: number = 0;\n  resData: any;\n  countries: {};\n  states: {};\n  cities: {};\n  client: any;\n\n\n\tconstructor(private formBuilder: FormBuilder,\n    private adminAuthService: AdminAuthService,\n    private clientService: ClientService,      \n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router : Router,\n    private route : ActivatedRoute,\n    private commonService : CommonService) { \n      this.commonService.setPageTitle(this.route.snapshot.data['title']);\n      this.commonService.checkSuperAdminLogin();\n    }\n\n\tngOnInit() {\n    this.getCountry();\n    const clientId = this.route.snapshot.paramMap.get('id');\n    //getProfileById(clientId: number) {\n      if (clientId) {\n        this.clientService.getProfileById(+clientId).then((result) => {\n          \n          this.resData = result;\n          this.client = this.resData.data;\n\t\t\t\t\t\n\t\t\t\t\tvar countryID = this.client.country_id;\n\t\t\t\t\tvar stateID = this.client.state_id;\n          //console.warn(countryID);\n          this.clientUpdateForm.patchValue({\n            clinicName: this.client.clinic_name,\n            firstName: this.client.first_name,\n            lastName: this.client.last_name,\n            emailAddress: this.client.email,\n            userName: this.client.username,\n            phoneNumber: this.client.phone_number,\n            startDate: this.formatDate(this.client.start_date),\n            endDate: this.formatDate(this.client.end_date),\n            address: this.client.address,\n            country: this.client.country_id,\n            state: this.client.state_id,\n            city: this.client.city_id,\n            zipCode: this.client.zip_code,\n            keyword: this.client.keyword,\n            status: this.client.status,\n            clientId: clientId\n          });\n\t\t\t\t\tthis.getStatesByCountryId(countryID);\n\t\t\t\t\tthis.getCitiesByStateId(stateID);\n        },error => {\n          this.spinner.hide();\n          this.loading = false;\n          this.toastr.error(error);\n        });\n\t\t\t\t\n\t\t\t\t\n      } else {\n        this.client = null;\n      }\n\t\t\t\t\t\t\n    //}\n\t\t\n\t\t\n    \n    //console.warn(clientId);\n    \n    this.clientUpdateForm = new FormGroup({\n      country: new FormControl(''),\n      state: new FormControl(''),\n      city: new FormControl('')\n    });\n    \n\t\tthis.clientUpdateForm = this.formBuilder.group({\n      clinicName: ['', [Validators.required , Validators.pattern(Config.CLNAME_PATTERN)]],\n      firstName: ['', [Validators.required , Validators.pattern(Config.NAME_PATTERN)]],\n      lastName: ['', [Validators.required , Validators.pattern(Config.NAME_PATTERN)]],\n      emailAddress: ['', [Validators.required , Validators.pattern(Config.EMAIL_PATTERN)]],\n      userName:  ['', [Validators.required , Validators.pattern(Config.UNAME_PATTERN)]],\n      phoneNumber: ['', [Validators.required , Validators.pattern(Config.PHONE_PATTERN)]],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      address: ['', Validators.required ],\n      country: ['', Validators.required],\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      zipCode: ['', [Validators.required , Validators.pattern(Config.ZIP_PATTERN)]],\n      keyword: ['', [Validators.required , Validators.pattern(Config.KEYWORD_PATTERN)]],\n      clientId: ['', Validators.required ]\n    });\n\n  }\n  \n  //getProfileById(clientId: number) {\n  //  if (clientId) {\n  //    this.clientService.getProfileById(clientId).then((result) => {\n  //      this.resData = result;\n  //      this.states = this.resData.data;\n  //      this.cities = null;\n  //    },error => {\n  //      this.spinner.hide();\n  //      this.loading = false;\n  //      this.toastr.error(error);\n  //    });      \n  //  } else {\n  //    this.states = null;\n  //    this.cities = null;\n  //  }\n  //}\n  \n  getCountry() {\n    this.clientService.getCountries().then((result) => {\n        this.resData = result;\n        this.countries = this.resData.data;\n        },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n    });\n  }\n  \n  onChangeCountry(countryId: number) {\n    if (countryId) {\n      this.clientService.getStatesById(countryId).then((result) => {\n        this.resData = result;\n        this.states = this.resData.data.stateList;\n        this.cities = null;\n      },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n      });      \n    } else {\n      this.states = null;\n      this.cities = null;\n    }\n  }\n\n  onChangeState(stateId: number) {\n    if (stateId) {\n      this.clientService.getCitiesById(stateId).then((result) => {\n        this.resData = result;\n        this.cities = this.resData.data.cityList;\n      },error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.toastr.error(error);\n      });      \n    } else {\n      this.cities = null;\n    }\n  }\n\t\n\tgetStatesByCountryId(countryId: number) {\n\t\tif (countryId) {\n\t\t\tthis.clientService.getStatesById(countryId).then((result) => {\n\t\t\t\tthis.resData = result;\n\t\t\t\tthis.states = this.resData.data.stateList;\n\t\t\t\tthis.cities = null;\n\t\t\t},error => {\n\t\t\t\tthis.spinner.hide();\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.toastr.error(error);\n\t\t\t});      \n\t\t} else {\n\t\t\tthis.states = null;\n\t\t\tthis.cities = null;\n\t\t}\n\t}\n\n\tgetCitiesByStateId(stateId: number) {\n\t\tif (stateId) {\n\t\t\tthis.clientService.getCitiesById(stateId).then((result) => {\n\t\t\t\tthis.resData = result;\n\t\t\t\tthis.cities = this.resData.data.cityList;\n\t\t\t},error => {\n\t\t\t\tthis.spinner.hide();\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.toastr.error(error);\n\t\t\t});      \n\t\t} else {\n\t\t\tthis.cities = null;\n\t\t}\n\t}\n\t\n\tprivate formatDate(date) {\n    const d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    const year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }\n  \n  attributes = {'clinicName': '','firstName': '','lastName': '','emailAddress': '','userName': '','phoneNumber': '','startDate': '','endDate': '','address': '','country': '','state': '','city': '','zipCode': '','keyword': '', 'clientId': ''};\n\tvalidationMessages = {\n      'clinicName': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.CLNAME_NOT_VALID_MESSAGE\n  \t\t},\n      'firstName': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.NAME_NOT_VALID_MESSAGE\n  \t\t},\n      'lastName': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.NAME_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'emailAddress': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.EMAIL_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'userName': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n      \t'pattern': Config.UNAME_NOT_VALID_MESSAGE\n  \t\t},\n      'phoneNumber': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.PHONE_NOT_VALID_MESSAGE\n  \t\t},\n      'startDate': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'endDate': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n  \t\t'address': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n  \t\t'country': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'state': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n      'city': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t},\n  \t\t'zipCode': {\n      \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n          'pattern': Config.ZIP_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'keyword': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG,        \n      \t'pattern': Config.KEYWORD_NOT_VALID_MESSAGE\n  \t\t},\n  \t\t'clientId': {\n    \t\t'required': Config.PLEASE_FILL_REQUIRED_FIELD_MSG\n  \t\t}\n\t};\n\n\tsubmit() {\n  \t\tthis.loading = true;\n     \tthis.showErrors = 1;\n    \tconst form = this.clientUpdateForm;\n    \tfor (const field in this.attributes) {\n      \t\tthis.attributes[field] = '';\n      \t\tconst control = form.get(field);\n      \t\tif (control && !control.valid) {\n        \t\tconst messages = this.validationMessages[field];\n        \t\tfor (const key in control.errors) {\n          \t\t\tif (this.attributes[field] == '') {\n              \t\t\tthis.attributes[field] += messages[key] + ' ';\n          \t\t\t}\n        \t\t}\n      \t\t}\n    \t}\n    \tif (this.clientUpdateForm.valid) {\n    \t\tthis.showErrors = 0;\n        \tthis.spinner.show();\n    \t\tthis.clientService.clientUpdate(this.clientUpdateForm.get('clinicName').value,this.clientUpdateForm.get('firstName').value,this.clientUpdateForm.get('lastName').value,this.clientUpdateForm.get('emailAddress').value,this.clientUpdateForm.get('userName').value,this.clientUpdateForm.get('phoneNumber').value,this.clientUpdateForm.get('startDate').value,this.clientUpdateForm.get('endDate').value,this.clientUpdateForm.get('address').value,this.clientUpdateForm.get('country').value,this.clientUpdateForm.get('state').value,this.clientUpdateForm.get('city').value,this.clientUpdateForm.get('zipCode').value,this.clientUpdateForm.get('keyword').value,this.clientUpdateForm.get('clientId').value).then((result) => {\n    \t\t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n          \t\tif(result['message'] && result['message'] != ''){\n          \t\t\tthis.toastr.success(result['message']);\t\n          \t\t}else{\n          \t\t\tthis.toastr.success(Config.RESET_PASSWORD_SUCCESS_MSG);\n          \t\t}\n          \t\t//this.clientRegisterForm.reset();\n          \t},error => {\n        \t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n        \t\t//this.clientRegisterForm.reset();\n\t\t\t\tthis.toastr.error(error);\n     \t\t}); \n    \t}else{\n        \tthis.loading = false;\n      \t}\n\t}\n}\n","<div class=\"container-fluid\">\n  <!-- Page Heading -->\n  <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\n    <h1 class=\"h3 mb-0 text-gray-800\">Update Clinic Details</h1>\n  </div>\n\t<!--<tr *ngFor=\"let country of countries\">\n      <th>{{country.name}}</th>\n\t</tr>-->\n  <!-- Content Row -->\n  <div class=\"row\">\n\t<div class=\"col-xl-12 col-md-12 mb-4\">\n      <div class=\"card shadow h-100 py-2\">\n        <div class=\"card-body\">\n          <div class=\"row no-gutters align-items-center\">\n            <div class=\"col \">\n            \t<form class=\"\" [formGroup]=\"clientUpdateForm\" (ngSubmit)=\"submit()\" novalidate>\n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Clinic Name<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputClinicName\" aria-describedby=\"newPasswordHelp\" placeholder=\"Clinic Name...\" formControlName=\"clinicName\" readonly [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.clinicName.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.clinicName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.clinicName }}\n\t\t\t\t\t\t\t\t\t</div> \n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">First Name<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputFirstName\" aria-describedby=\"newPasswordHelp\" placeholder=\"First Name...\" formControlName=\"firstName\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.firstName.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.firstName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.firstName }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n\t\t\t\t\t\t\t\t\t\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Last Name<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputLastName\" aria-describedby=\"newPasswordHelp\" placeholder=\"Last Name...\" formControlName=\"lastName\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.lastName.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.lastName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.lastName }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Email Address<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t<input type=\"email\" class=\"form-control\" id=\"inputEmailAddress\" aria-describedby=\"newPasswordHelp\" placeholder=\"Email Address...\" formControlName=\"emailAddress\" readonly [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.emailAddress.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.emailAddress.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.emailAddress }}\n\t\t\t\t\t\t\t\t\t</div> \n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Username<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputUserName\" aria-describedby=\"newPasswordHelp\" placeholder=\"Username...\" formControlName=\"userName\" readonly [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.userName.valid }\">\n      \t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.userName.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.userName }}\n\t\t\t\t\t\t\t\t\t</div> \n                  </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Phone Number<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputPhoneNumber\" aria-describedby=\"newPasswordHelp\" placeholder=\"Phone Number...(Eg:-0000000000)\" formControlName=\"phoneNumber\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.phoneNumber.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.phoneNumber.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.phoneNumber }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Start Date<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<input type=\"date\" class=\"form-control\" id=\"inputStartDate\" aria-describedby=\"newPasswordHelp\" placeholder=\"Start Date...\" formControlName=\"startDate\" readonly [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.startDate.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.startDate.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.startDate }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">End Date<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"date\" class=\"form-control\" id=\"inputEndDate\" aria-describedby=\"newPasswordHelp\" placeholder=\"End Date...\" formControlName=\"endDate\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.endDate.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.endDate.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.endDate }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Address<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputAddress\" aria-describedby=\"newPasswordHelp\" placeholder=\"Address...\" formControlName=\"address\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.address.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.address.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.address }}\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n                \n                <!--<div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputCountryId\" aria-describedby=\"newPasswordHelp\" placeholder=\"Select Country...\" formControlName=\"countryId\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.countryId.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.countryId.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.countryId }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                  <div class=\"col-sm-6\">\n                    <input type=\"text\" class=\"form-control\" id=\"inputCountryId\" aria-describedby=\"newPasswordHelp\" placeholder=\"Select State...\" formControlName=\"stateId\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.stateId.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.stateId.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.stateId }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>-->\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Select Country<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<select formControlName=\"country\" readonly class=\"form-control\" (change)=\"onChangeCountry($event.target.value)\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.country.valid }\">\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select country...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let country of countries\" [value]=\"country.id\">{{country.name}}</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.country.valid\" class=\"invalid-feedback\"> \n\t\t\t\t\t\t\t\t\t\t\t{{ attributes.countryId }}\n\t\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Select State<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<select formControlName=\"state\" readonly class=\"form-control\" (change)=\"onChangeState($event.target.value)\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.state.valid }\">\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select state...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let state of states\" [value]=\"state.id\">{{state.name}}</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.state.valid\" class=\"invalid-feedback\"> \n\t\t\t\t\t\t\t\t\t\t\t{{ attributes.stateId }}\n\t\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                \n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Select City<span class=\"mandatorySign\">*</span></label>\n\t\t\t\t\t\t\t\t\t\t<select formControlName=\"city\" readonly class=\"form-control\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.city.valid }\">\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">Select city...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option *ngFor=\"let city of cities\" [value]=\"city.id\">{{city.name}}</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n                    <!--<input type=\"text\" class=\"form-control\" id=\"inputCityId\" aria-describedby=\"newPasswordHelp\" placeholder=\"Select City...\" formControlName=\"cityId\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.cityId.valid }\">-->\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.city.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.city }}\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n                  <div class=\"col-sm-6\">\n\t\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Zip Code<span class=\"mandatorySign\">*</span></label>\n                    <input type=\"text\" class=\"form-control\" id=\"inputZipCode\" aria-describedby=\"newPasswordHelp\" placeholder=\"Zip Code...\" formControlName=\"zipCode\" [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.zipCode.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.zipCode.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.zipCode }}\n\t\t\t\t\t\t\t\t\t</div>\n                  </div>\n                </div>\n                \n                <div class=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label class=\"titleBold\">Keyword For Instance<span class=\"mandatorySign\">*</span></label>\n                  <input type=\"text\" class=\"form-control\" id=\"inputKeyword\" aria-describedby=\"newPasswordHelp\" placeholder=\"Keyword For Instance...\" formControlName=\"keyword\" readonly [ngClass]=\"{ 'is-invalid': showErrors && !clientUpdateForm.controls.keyword.valid }\">\n\t\t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !clientUpdateForm.controls.keyword.valid\" class=\"invalid-feedback\"> \n   \t\t\t\t\t\t\t\t{{ attributes.keyword }}\n\t\t\t\t\t\t\t\t\t</div>\n                </div>\n                <input type=\"hidden\" class=\"form-control\" id=\"inputId\" formControlName=\"clientId\">\n                <button type=\"submit\" class=\"btn btn-primary btn-block\">\n\t\t\t\t\t\t\t\t\t\t<span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n\t\t\t\t\t\t\t\t\t\tUpdate Clinic\n\t\t\t\t\t\t\t\t</button>\n                <hr>\n                <!--<a href=\"index.html\" class=\"btn btn-google btn-user btn-block\">\n                  <i class=\"fab fa-google fa-fw\"></i> Register with Google\n                </a>\n                <a href=\"index.html\" class=\"btn btn-facebook btn-user btn-block\">\n                  <i class=\"fab fa-facebook-f fa-fw\"></i> Register with Facebook\n                </a>-->\n              </form> \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService, ClientService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-client-archived',\n  templateUrl: './client-archived.component.html',\n  styleUrls: ['./client-archived.component.less']\n})\nexport class ClientArchivedComponent implements OnInit {\n  loading: boolean = false;\n  showErrors: number = 0;\n  clients: any;\n  resData: any;\n\n  constructor(private formBuilder: FormBuilder,\n    \tprivate adminAuthService: AdminAuthService,\n      private clientService: ClientService,\n    \tprivate toastr: ToastrService,\n    \tprivate spinner: NgxSpinnerService,\n    \tprivate router : Router,\n    \tprivate route : ActivatedRoute,\n    \tprivate commonService : CommonService) { \n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n    this.commonService.checkSuperAdminLogin();\n\t}\n\n   ngOnInit() {\n    this.getarchivedUsers();\n  }\n\n  getarchivedUsers() {\n    this.clientService.getarchivedClients().then((result) => {\n        this.resData = result;\n        this.clients = this.resData.data;\n        },error => {\n        this.spinner.hide();\n        this.loading = false;\n        //this.changePasswordForm.reset();\n        this.toastr.error(error);\n    });\n  }\n\n}\n","<!-- Begin Page Content -->\n        <div class=\"container-fluid\">\n\n          <!-- Page Heading -->\n          <h1 class=\"h3 mb-2 text-gray-800\">Archived Clinics</h1>\n          <!--<p class=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>-->\n\n          <!-- DataTales Example -->\n          <div class=\"card shadow mb-4\">\n            <!--<div class=\"card-header py-3\">\n              <p style=\"float: left;\">\n              <a routerLink=\"/superadmin/client-archived\" class=\"btn btn-warning btn-icon-split\">\n                <span class=\"icon text-white-50\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n                <span class=\"text\">Archived Clinic</span>\n              </a>\n              </p>\n              <p style=\"float: right;\">\n              <a routerLink=\"/superadmin/client-register\" class=\"btn btn-success btn-icon-split\">\n                <span class=\"icon text-white-50\">\n                  <i class=\"fas fa-plus\"></i>\n                </span>\n                <span class=\"text\">Add New Clinic</span>\n              </a>\n              </p>\n            </div>-->\n            <div class=\"card-body\">\n              <div class=\"table-responsive\">\n                <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\n                  <thead>\n                    <tr>\n                      <th>Clinic Name</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Keyword</th>\n                      <th>Phone</th>\n                      <th>End Date</th>\n                      <!--<th>Action</th>-->\n                    </tr>\n                  </thead>\n                  <!--<tfoot>\n                    <tr>\n                      <th>Name</th>\n                      <th>Position</th>\n                      <th>Office</th>\n                      <th>Age</th>\n                      <th>Start date</th>\n                      <th>Salary</th>\n                    </tr>\n                  </tfoot>-->\n                  <tbody>\n                   \n                    <tr *ngFor=\"let client of clients\">\n                      <th>{{client.clinic_name}}</th>\n                      <td>{{client.first_name}} {{client.last_name}}</td>\n                      <td>{{client.email}}</td>\n                      <td>{{client.keyword}}</td>\n                      <td>{{client.phone_number}}</td>\n                      <td>{{client.end_date | date:'yyyy-MM-dd'}}</td>\n                      <!--<td>\n                        <a routerLink=\"/superadmin/client-update/{{client.id}}\" class=\"btn btn-info btn-circle btn-sm\">\n                          <i class=\"fas fa-edit\"></i>\n                        </a>&nbsp;\n                        \n                          <a (click)=\"onUpdateStatus(client.id)\" class=\"btn btn-warning btn-circle btn-sm\">\n                            <i class=\"fas fa-toggle-on\"></i>\n                          </a>&nbsp;\n                       \n                        <a (click)=\"onDelete(client.id)\" class=\"btn btn-danger btn-circle btn-sm\">\n                          <i class=\"fas fa-trash\"></i>\n                        </a>\n                      </td>-->\n                    </tr>\n                   \n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <!-- /.container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar'; \nimport { Observable } from \"rxjs/Observable\";\nimport { AdminAuthService, CommonService } from '../../_services';\n@Component({\n    selector: 'layout',\n    templateUrl: './layout.component.html',\n    styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n    isSuperAdminLoggedIn$: Observable<boolean>;\n\tpublic config: PerfectScrollbarConfigInterface = {};\n    constructor(public router: Router,\n        private adminAuthService: AdminAuthService,\n        private commonService: CommonService) { \n        this.commonService.checkSuperAdminLogin();\n    }\n\n    ngOnInit() {\n        this.isSuperAdminLoggedIn$ = this.adminAuthService.isSuperAdminLoggedIn;\n    }\n\n}\n","<div id=\"wrapper\">\n\t<sidebar *ngIf=\"isSuperAdminLoggedIn$ | async\"></sidebar>\n\t<div id=\"content-wrapper\" class=\"d-flex flex-column\">\n\t\t<div id=\"content\">\n\t\t\t<superadmin-header *ngIf=\"isSuperAdminLoggedIn$ | async\"></superadmin-header>\n\t\t\t<router-outlet></router-outlet>\n\t\t</div>\n\t\t<superadmin-footer *ngIf=\"isSuperAdminLoggedIn$ | async\"></superadmin-footer>\n\t</div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService, ClientService } from '../../_services';\n//import { ClientService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.less']\n})\nexport class MessageComponent implements OnInit {\n  loading: boolean = false;\n  showErrors: number = 0;\n  messages: any;\n  resData: any;\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject<any>();\n\n  constructor(private formBuilder: FormBuilder,\n    \tprivate adminAuthService: AdminAuthService,\n      private clientService: ClientService,\n    \tprivate toastr: ToastrService,\n    \tprivate spinner: NgxSpinnerService,\n    \tprivate router : Router,\n    \tprivate route : ActivatedRoute,\n    \tprivate commonService : CommonService) { \n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n    this.commonService.checkSuperAdminLogin();\n\t}\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10\n    };\n    \n    this.getMessages();\n  }\n  \n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  getMessages() {\n    this.clientService.getMessages().then((result) => {\n        this.resData = result;\n        this.messages = this.resData.data;\n        this.dtTrigger.next();\n        },error => {\n        this.spinner.hide();\n        this.loading = false;\n        //this.changePasswordForm.reset();\n        this.toastr.error(error);\n    });\n  }\n\n}\n","<!-- Begin Page Content -->\n        <div class=\"container-fluid\">\n\n          <!-- Page Heading -->\n          <h1 class=\"h3 mb-2 text-gray-800\">Messages</h1>\n          <!--<p class=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>-->\n\n          <!-- DataTales Example -->\n          <div class=\"card shadow mb-4\">\n            <div class=\"card-header py-3\">\n              <!--<p style=\"float: left;\">\n              <a routerLink=\"/superadmin/client-archived\" class=\"btn btn-warning btn-icon-split\">\n                <span class=\"icon text-white-50\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n                <span class=\"text\">Archived Clinic</span>\n              </a>\n              </p>-->\n              <!--<p style=\"float: right;\">\n              <a routerLink=\"/clinic/role-register\" class=\"btn btn-success btn-icon-split\">\n                <span class=\"icon text-white-50\">\n                  <i class=\"fas fa-plus\"></i>\n                </span>\n                <span class=\"text\">Add New Role</span>\n              </a>\n              </p>-->\n            </div>\n            <div class=\"card-body\">\n              <div class=\"table-responsive\">\n                <table class=\"table table-bordered\" width=\"100%\" cellspacing=\"0\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\n                  <thead>\n                    <tr>\n                      <th>Subject</th>\n                      <th>Message</th>\n                      <th>Sender Name</th>\n                      <th>Receiver Name</th>\n                      <th>Date</th>\n                    </tr>\n                  </thead>\n                  <!--<tfoot>\n                    <tr>\n                      <th>Name</th>\n                      <th>Position</th>\n                      <th>Office</th>\n                      <th>Age</th>\n                      <th>Start date</th>\n                      <th>Salary</th>\n                    </tr>\n                  </tfoot>-->\n                  <tbody>\n                    \n                    <!--<tr>\n                      <td>Administrator</td>\n                      <td>We manage the admin works.</td>\n                      <td><a class=\"btn btn-info btn-circle btn-sm\">\n                          <i class=\"fas fa-edit\"></i>\n                        </a>&nbsp;\n                        \n                          <a class=\"btn btn-warning btn-circle btn-sm\">\n                            <i class=\"fas fa-toggle-on\"></i>\n                          </a>&nbsp;\n                       \n                        <a class=\"btn btn-danger btn-circle btn-sm\">\n                          <i class=\"fas fa-trash\"></i>\n                        </a>\n                      </td>\n                    </tr>-->\n                   \n                    <tr *ngFor=\"let message of messages\">\n                      <td>{{message.subject}}</td>\n                      <td>{{message.message}}</td>\n                      <th>{{message.Sendername}}</th>\n                      <th>{{message.Receivername}}</th>\n                      <td>{{message.created_date | date:'yyyy-MM-dd'}}</td>           \n                      <!--<td>\n                        <a routerLink=\"/clinic/role-update/{{role.id}}\" class=\"btn btn-info btn-circle btn-sm\" title=\"Update Role\">                        \n                          <i class=\"fas fa-edit\"></i>\n                        </a>&nbsp;\n                        \n                          <a (click)=\"onUpdateStatus(role.id)\" class=\"btn btn-info btn-circle btn-sm\" title=\"Update Status\">\n                            <i class=\"fas fa-toggle-on\"></i>\n                          </a>&nbsp;\n                       \n                      </td>-->\n                    </tr>\n                   \n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <!-- /.container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./auth.component.css']\n})\n\nexport class ResetPasswordComponent implements OnInit {\n\tresetPasswordForm: FormGroup;\n    loading: boolean = false;\n    showErrors: number = 0;\n    resetToken: string;\n\tconstructor(private formBuilder: FormBuilder,\n    \tprivate adminAuthService: AdminAuthService,\n    \tprivate toastr: ToastrService,\n    \tprivate spinner: NgxSpinnerService,\n    \tprivate router : Router,\n    \tprivate route : ActivatedRoute,\n      \tprivate commonService : CommonService) {\n\t\tthis.resetToken = this.route.snapshot.queryParams.resetToken;\n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n\t\tthis.commonService.checkSuperAdminLogin();\n\t}\n\tngOnInit() {\n\t\tthis.resetPasswordForm = this.formBuilder.group({\n        \tpassword: ['', [Validators.required , Validators.pattern(Config.PASSWORD_REGX)]],\n        \tconfirmPassword: ['', Validators.required]\n        },{validator: this.passwordMatchValidator});\n\t}\n\tpasswordMatchValidator(frm: FormGroup) {\n      return frm.controls['password'].value === frm.controls['confirmPassword'].value ? null : {'mismatch': true};\n    }\n    \n    attributes = {'password': '','confirmPassword': ''};\n\tvalidationMessages = {\n  \t\t'password': {\n      \t\t'required': Config.PASSWORD_REQUIRED_VALIDATION_MSG,\n      \t\t'pattern': Config.PASSWORD_NOT_VALID_VALIDATION_MSG\n  \t\t},\n  \t\t'confirmPassword': {\n    \t\t'required': Config.CONFIRM_PASSWORD_REQUIRED_VALIDATION_MSG,\n    \t\t'mismatch' : Config.PASSWORD_MISMATCH_VALIDATION_MSG\n  \t\t}\n\t};\n\tsubmit() {\n  \t\tthis.loading = true;\n     \tthis.showErrors = 1;\n    \tconst form = this.resetPasswordForm;\n    \tfor (const field in this.attributes) {\n      \t\tthis.attributes[field] = '';\n      \t\tconst control = form.get(field);\n      \t\tif (control && !control.valid) {\n        \t\tconst messages = this.validationMessages[field];\n        \t\tfor (const key in control.errors) {\n          \t\t\tif (this.attributes[field] == '') {\n              \t\t\tthis.attributes[field] += messages[key] + ' ';\n          \t\t\t}\n        \t\t}\n      \t\t}\n    \t}\n    \tif (this.resetPasswordForm.valid) {\n    \t\tthis.showErrors = 0;\n        \tthis.spinner.show();\n    \t\tthis.adminAuthService.resetPassword(this.resetPasswordForm.get('password').value,this.resetPasswordForm.get('confirmPassword').value,this.resetToken).then((result) => {\n    \t\t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n          \t\tif(result['message'] && result['message'] != ''){\n          \t\t\tthis.toastr.success(result['message']);\t\n          \t\t}else{\n          \t\t\tthis.toastr.success(Config.RESET_PASSWORD_SUCCESS_MSG);\n          \t\t}\n          \t\tthis.router.navigate(['/superadmin/login']);\n  \t\t\t},error => {\n        \t\tthis.spinner.hide();\n        \t\tthis.loading = false;\n        \t\tthis.resetPasswordForm.reset();\n\t\t\t\tthis.toastr.error(error);\n     \t\t}); \n    \t}else{\n        \tthis.loading = false;\n      \t}\n\t}\n}","<div class=\"container\">\n\t<div class=\"row justify-content-center\">\n\t\t<div class=\"col-xl-6 col-lg-8 col-md-5\">\n\t\t\t<div class=\"card o-hidden border-0 shadow-lg my-5\">\n          \t\t<div class=\"card-body p-0\">\n            \t\t<div class=\"row\">\n              \t\t\t<div class=\"col-lg-12\">\n              \t\t\t\t<div class=\"p-5\">\n                  \t\t\t\t<div class=\"text-center\">\n                  \t\t\t\t\t<img src=\"assets/img/logo.png\" alt=\"app-logo\" class=\"logo\">\n                    \t\t\t\t<h1 class=\"h4 text-gray-900 mb-4\">Reset Password?</h1>\n                    \t\t\t</div>\n\t                  \t\t\t<form class=\"\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"submit()\" novalidate>\n\t                    \t\t\t<div class=\"form-group\">\n\t                    \t\t\t\t<div class=\"input-group\"> \n\t                      \t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputPassword\" aria-describedby=\"passwordHelp\" placeholder=\"Enter Password...\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': showErrors && !resetPasswordForm.controls.password.valid }\">\n                      \t\t\t\t\t\t<!-- <div class=\"input-group-append\">\n          \t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n          \t\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0);\">\n          \t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>\n      \t\t\t\t\t\t\t\t\t\t\t\t</a>\n          \t\t\t\t\t\t\t\t\t\t</div>\n        \t\t\t\t\t\t\t\t\t</div> -->\n        \t\t\t\t\t\t\t\t\t<div *ngIf=\"showErrors && !resetPasswordForm.controls.password.valid\" class=\"invalid-feedback\"> \n\t               \t\t\t\t\t\t\t\t{{ attributes.password }}\n\t            \t\t\t\t\t\t\t</div> \n    \t\t\t\t\t\t\t\t\t</div>\n\t                      \t\t\t</div>\n\t                    \t\t\t<div class=\"form-group\">\n\t                    \t\t\t\t<div class=\"input-group\">\n\t                      \t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\" aria-describedby=\"confirmPasswordHelp\" placeholder=\"Enter Confrim Password...\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': showErrors && (!resetPasswordForm.controls.confirmPassword.valid || resetPasswordForm.hasError('mismatch'))}\">\n\t                      \t\t\t\t\t<!-- <div class=\"input-group-append\">\n          \t\t\t\t\t\t\t\t\t\t<div class=\"input-group-text\">\n          \t\t\t\t\t\t\t\t\t\t\t<a href=\"javascript:void(0);\">\n          \t\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-eye-slash\" aria-hidden=\"true\"></i>\n      \t\t\t\t\t\t\t\t\t\t\t\t</a>\n          \t\t\t\t\t\t\t\t\t\t</div>\n        \t\t\t\t\t\t\t\t\t</div> -->\n\t                      \t\t\t\t\t<div *ngIf=\"showErrors && !resetPasswordForm.controls.confirmPassword.valid\" class=\"invalid-feedback\"> \n\t               \t\t\t\t\t\t\t\t{{ attributes.confirmPassword }}\n\t            \t\t\t\t\t\t\t</div>\n\t            \t\t\t\t\t\t\t<div *ngIf=\"showErrors && resetPasswordForm.controls.confirmPassword.valid\" [hidden]=\"!resetPasswordForm.hasError('mismatch')\" class=\"invalid-feedback\">\n                          \t\t\t\t\t\t<span *ngIf=\"resetPasswordForm.hasError('mismatch')\">{{validationMessages.confirmPassword.mismatch}}\n                          \t\t\t\t\t\t</span>\n                      \t\t\t\t\t\t</div>\n            \t\t\t\t\t\t\t</div>\n\t                    \t\t\t</div>\n\t                    \t\t\t<button type=\"submit\" class=\"btn btn-primary btn-block\">\n\t                    \t\t\t\t<span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n\t                    \t\t\t\tSubmit\n                    \t\t\t\t</button>\n\t                    \t\t</form>\n                  \t\t\t\t<hr>\n\t                  \t\t\t<div class=\"text-center\">\n\t                    \t\t\t<a class=\"small\" routerLink=\"./../login\">Have you found password? Login!</a>\n\t                  \t\t\t</div>\n\t                  \t\t</div>\n              \t\t\t</div>\n            \t\t</div>\n          \t\t</div>\n        \t</div>\n\t\t</div>\n\t</div>\n</div>","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService, ClientService } from '../../_services';\n//import { ClientService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { DataTableDirective } from 'angular-datatables';\n//import { Client } from '../../models/client';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.less']\n})\nexport class ClientComponent implements OnInit {\n  //changePasswordForm: FormGroup;\n    loading: boolean = false;\n    showErrors: number = 0;\n    clients: any;\n    resData: any;\n    \n    @ViewChild(DataTableDirective, {static: false})\n    dtElement: DataTableDirective;\n    dtOptions: DataTables.Settings = {};\n    dtTrigger: Subject<any> = new Subject<any>();\n\n  constructor(private formBuilder: FormBuilder,\n    \tprivate adminAuthService: AdminAuthService,\n      private clientService: ClientService,\n    \tprivate toastr: ToastrService,\n    \tprivate spinner: NgxSpinnerService,\n    \tprivate router : Router,\n    \tprivate route : ActivatedRoute,\n    \tprivate commonService : CommonService) { \n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n    this.commonService.checkSuperAdminLogin();\n\t}\n  \n  \n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10\n    };\n    \n    this.getUsers();\n  }\n  \n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n  }\n\n  getUsers() {\n    this.clientService.getClients().then((result) => {\n        this.resData = result;\n        this.clients = this.resData.data;\n        this.dtTrigger.next();\n        },error => {\n        this.spinner.hide();\n        this.loading = false;\n        //this.changePasswordForm.reset();\n        this.toastr.error(error);\n    });\n  }\n  \n  \n  onDelete(id: number,rowIndex:number) { \n    if (confirm('Are you sure want to delete this?')) {\n      this.clientService.deleteClient(+id).then((result) => {\n          this.clients.splice(rowIndex,1);\n          this.toastr.success(result['message']);\t\n          this.rerender();\n        },error => {\n          this.spinner.hide();\n          this.loading = false;\n          //this.changePasswordForm.reset();\n          this.toastr.error(error);\n      });\n    }\n  }\n  \n  onUpdateStatus(id: number) { \n    if (confirm('Are you sure want to update status?')) {\n      this.clientService.updateStatus(+id).then((result) => {\n          //this.clients.splice(rowIndex,1);\n          this.toastr.success(result['message']);\n          setTimeout(function() {\n              location.reload();\n          }, 3000);\n          //this.rerender();\n        },error => {\n          this.spinner.hide();\n          this.loading = false;\n          //this.changePasswordForm.reset();\n          this.toastr.error(error);\n      });\n    }\n  }\n  \n  rerender() : void {\n    this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n      dtInstance.destroy();\n      this.dtTrigger.next();\n    });\n  }\n\n}\n","<!-- Begin Page Content -->\n        <div class=\"container-fluid\">\n\n          <!-- Page Heading -->\n          <h1 class=\"h3 mb-2 text-gray-800\">Clinics</h1>\n          <!--<p class=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more information about DataTables, please visit the <a target=\"_blank\" href=\"https://datatables.net\">official DataTables documentation</a>.</p>-->\n\n          <!-- DataTales Example -->\n          <div class=\"card shadow mb-4\">\n            <div class=\"card-header py-3\">\n              <p style=\"float: left;\">\n              <a routerLink=\"/superadmin/client-archived\" class=\"btn btn-warning btn-icon-split\">\n                <span class=\"icon text-white-50\">\n                  <i class=\"fas fa-user\"></i>\n                </span>\n                <span class=\"text\">Archived Clinic</span>\n              </a>\n              </p>\n              <p style=\"float: right;\">\n              <a routerLink=\"/superadmin/client-register\" class=\"btn btn-success btn-icon-split\">\n                <span class=\"icon text-white-50\">\n                  <i class=\"fas fa-plus\"></i>\n                </span>\n                <span class=\"text\">Add New Clinic</span>\n              </a>\n              </p>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"table-responsive\">\n                <table class=\"table table-bordered\" width=\"100%\" cellspacing=\"0\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\">\n                  <thead>\n                    <tr>\n                      <th>Clinic Name</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Keyword</th>\n                      <th>Phone</th>\n                      <th>End Date</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <!--<tfoot>\n                    <tr>\n                      <th>Name</th>\n                      <th>Position</th>\n                      <th>Office</th>\n                      <th>Age</th>\n                      <th>Start date</th>\n                      <th>Salary</th>\n                    </tr>\n                  </tfoot>-->\n                  <tbody>\n                   \n                    <tr *ngFor=\"let client of clients;let rowIndex = index\">\n                      <th>{{client.clinic_name}}</th>\n                      <td>{{client.first_name}} {{client.last_name}}</td>\n                      <td>{{client.email}}</td>\n                      <td>{{client.keyword}}</td>\n                      <td>{{client.phone_number}}</td>\n                      <td>{{client.end_date | date:'yyyy-MM-dd'}}</td>\n                      <td>\n                         <a routerLink=\"/superadmin/client-update/{{client.id}}\" class=\"btn btn-info btn-circle btn-sm\">\n                          <i class=\"fas fa-edit\"></i>\n                        </a>&nbsp;\n                        <a routerLink=\"/superadmin/send-message/{{client.id}}\" class=\"btn btn-info btn-circle btn-sm\">\n                          <i class=\"fas fa-envelope\"></i>\n                        </a>&nbsp;\n                        <a *ngIf=\"client.status == 'inactive'\" (click)=\"onUpdateStatus(client.id)\" class=\"btn btn-warning btn-circle btn-sm\">\n                          <i class=\"fas fa-toggle-on\"></i>\n                        </a>\n                        <a *ngIf=\"client.status == 'active'\" (click)=\"onUpdateStatus(client.id)\" class=\"btn btn-success btn-circle btn-sm\">\n                          <i class=\"fas fa-toggle-on\"></i>\n                        </a>&nbsp;                       \n                        <a (click)=\"onDelete(client.id,rowIndex)\" class=\"btn btn-danger btn-circle btn-sm\">\n                          <i class=\"fas fa-trash\"></i>\n                        </a>\n                      </td>\n                    </tr>\n                   \n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <!-- /.container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AdminAuthService, CommonService } from '../../_services';\nimport { Config } from './../../constant';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./auth.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n\tloginForm: FormGroup;\n  loading = false;\n  showErrors: number = 0;\n    \n  constructor(private formBuilder: FormBuilder,\n  \tprivate adminAuthService: AdminAuthService,\n  \tprivate toastr: ToastrService,\n  \tprivate spinner: NgxSpinnerService,\n  \tprivate router : Router,\n    private route : ActivatedRoute,\n    private commonService : CommonService) { \n    this.commonService.setPageTitle(this.route.snapshot.data['title']);\n    this.commonService.checkSuperAdminLogin();\n  }\n\n\tngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required,Validators.email ] ],\n      password: ['', Validators.required]\n    });\n  }\n\n  attributes = {'email': '','password' : ''};\n\tvalidationMessages = {\n  \t'email': {\n\t    'required': Config.EMAIL_REQUIRED_VALIDATION_MSG,\n\t    'email': Config.EMAIL_FORMAT_VALIDATION_MSG\n    },\n    'password': {\n\t    'required': Config.PASSWORD_REQUIRED_VALIDATION_MSG\n  \t}\n\t};\n  submit() {\n    this.loading = true;\n    this.showErrors = 1;\n  \tconst form = this.loginForm;\n  \tfor (const field in this.attributes) {\n    \tthis.attributes[field] = '';\n    \tconst control = form.get(field);\n    \tif (control && !control.valid) {\n      \tconst messages = this.validationMessages[field];\n      \tfor (const key in control.errors) {\n        \tif (this.attributes[field] == '') {\n          \tthis.attributes[field] += messages[key] + ' ';\n        \t}\n      \t}\n    \t}\n  \t}\n    if (this.loginForm.valid) {\n      this.showErrors = 0;\n      this.spinner.show();\n      this.adminAuthService.login(this.loginForm.get('email').value,this.loginForm.get('password').value).then((result) => {\n        this.spinner.hide();\n        this.loading = false;\n        this.router.navigate(['/superadmin/client']);\n\t\t\t},error => {\n        this.spinner.hide();\n        this.loading = false;\n        this.loginForm.reset();\n        this.toastr.error(error);\n      }); \n  \t}else{\n      this.loading = false;\n    }\n\t}\n}","<div class=\"container\">\n\t<div class=\"row justify-content-center\">\n\t\t<div class=\"col-xl-6 col-lg-8 col-md-5\">\n\t\t\t<div class=\"card o-hidden border-0 shadow-lg my-5\">\n          \t\t<div class=\"card-body p-0\">\n            \t\t<div class=\"row\">\n              \t\t\t<div class=\"col-lg-12\">\n              \t\t\t\t<div class=\"p-5\">\n                  \t\t\t\t<div class=\"text-center\">\n                  \t\t\t\t\t<img src=\"assets/img/logo.png\" alt=\"app-logo\" class=\"logo\">\n                    \t\t\t\t<h1 class=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                  \t\t\t\t</div>\n\t                  \t\t\t<form class=\"\" [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\" novalidate>\n\t                    \t\t\t<div class=\"form-group\">\n\t                      \t\t\t\t<input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': showErrors && !loginForm.controls.email.valid }\">\n\t                      \t\t\t\t<div *ngIf=\"showErrors && !loginForm.controls.email.valid\" class=\"invalid-feedback\"> \n\t               \t\t\t\t\t\t\t{{ attributes.email }}\n\t            \t\t\t\t\t\t</div>  \n\t                    \t\t\t</div>\n\t                    \t\t\t<div class=\"form-group\">\n\t                      \t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Password\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid': showErrors && !loginForm.controls.email.valid }\">\n\t                      \t\t\t\t<div *ngIf=\"showErrors && !loginForm.controls.password.valid\" class=\"invalid-feedback\"> \n\t               \t\t\t\t\t\t\t{{ attributes.password }}\n\t            \t\t\t\t\t\t</div>\n\t                    \t\t\t</div>\n\t                    \t\t\t<button type=\"submit\" class=\"btn btn-primary btn-block\">\n\t                    \t\t\t\t<span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n\t                    \t\t\t\tLogin\n                    \t\t\t\t</button>\n\t                    \t\t</form>\n                  \t\t\t\t<hr>\n\t                  \t\t\t<div class=\"text-center\">\n\t                    \t\t\t<a class=\"small\" routerLink=\"./../forgot-password\">Forgot Password?</a>\n\t                  \t\t\t</div>\n\t                  \t\t</div>\n              \t\t\t</div>\n            \t\t</div>\n          \t\t</div>\n        \t</div>\n\t\t</div>\n\t</div>\n</div>\n\n"],"sourceRoot":"webpack:///"}