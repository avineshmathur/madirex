{"version":3,"sources":["./src/app/_guards/admin.auth.guard.ts","./src/app/_services/client.service.ts","./src/app/_guardsclinic/index.ts","./src/app/constant.ts","./src/environments/environment.ts","./src/app/_guardsclinic/adminclinic.auth.guard.ts","./src/app/_services/role.service.ts","./src/app/_services/adminclinic.auth.service.ts","./src/app/block-element/block-element.module.ts","./src/app/block-template/block-template.component.ts","./src/app/_services/index.ts","./src/app/_guards/auth.guard.ts","./src/app/_services/authenticationclinic.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/user.service.ts","./src/app/_helpers/index.ts","./src/app/_services/common.service.ts","./src/app/app.module.ts","./src/app/_services/admin.auth.service.ts","./src/app/_services/business.service.ts","./src/app/shared/spinner/spinner.component.ts","./src/app/shared/spinner/spinner.component.html","./src/app/_services/patient.service.ts","./src/app/_helpers/error.interceptor.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/_services/authentication.service.ts","./src/app/_guards/index.ts","./src/app/app-routing.module.ts","./src/app/_guardsclinic/authclinic.guard.ts","./src/app/block-element/block-element.component.ts","./src/app/block-element/block-element.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Config } from '../constant';\n@Injectable()\nexport class AdminAuthGuard implements CanActivate {\n    constructor(\n        private router: Router\n    ) {}\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {\n        let url: string = state.url;\n        return this.checkLogin(url);\n    }\n    checkLogin(url: string): boolean {\n        let currentSuperAdmin = JSON.parse(localStorage.getItem('currentSuperAdmin'));\n        if (!currentSuperAdmin || !currentSuperAdmin.id) {\n            this.router.navigate(['/superadmin/login']);\n            return false;\n        }\n        return true;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n//import { Client } from '../_models/client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  private loggedIn = new BehaviorSubject<boolean>(false);\n    get isSuperAdminLoggedIn() {\n        let currentSuperAdmin = JSON.parse(localStorage.getItem('currentSuperAdmin'));\n        if (currentSuperAdmin && currentSuperAdmin.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n\n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n    \n    getProfileById(clientId: number) {\n        let requestData = {\n            \"userId\":clientId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'client/get-profile', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getCountries() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'country-list', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n     }\n     \n    getStatesById(countryId: number) {\n        let requestData = {\n            \"country_id\":countryId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'state-list-by-country-id', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getCitiesById(stateId: number) {\n      let requestData = {\n          \"state_id\":stateId\n      }\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'city-list-by-state-id', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    getClients() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'client/list', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n    }\n    \n    getMessages() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'client/message-list', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n    }\n    \n    getarchivedClients() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'client/archived-list', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n    }\n    \n    deleteClient(id: number) {      \n      let requestData = {\n          \"id\":id\n      }      \n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'client/delete', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              console.log(res);\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    updateStatus(id: number) {      \n      let requestData = {\n          \"id\":id\n      }      \n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'client/update-status', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              console.log(res);\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n\n     \n     clientRegister(clinicName: string, firstName: string, lastName:string,emailAddress: string, userName: string, phoneNumber:string,startDate: string, endDate: string, address:string,countryId: string, stateId: string, cityId:string, zipCode: string, keyword:string) {\n        let requestData = {\n            \"clinic_name\":clinicName,\n            \"first_name\":firstName,\n            \"last_name\":lastName,\n            \"email\":emailAddress,\n            \"username\":userName,\n            \"phone_number\":phoneNumber,\n            \"start_date\":startDate,\n            \"end_date\":endDate,\n            \"address\":address,\n            \"country_id\":countryId,\n            \"state_id\":stateId,\n            \"city_id\":cityId,\n            \"zip_code\":zipCode,\n            \"keyword\":keyword\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'client/create', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    clientUpdate(clinicName: string, firstName: string, lastName:string,emailAddress: string, userName: string, phoneNumber:string,startDate: string, endDate: string, address:string,countryId: string, stateId: string, cityId:string, zipCode: string, keyword:string, clientId: string) { \n        let requestData = {\n            \"clinic_name\":clinicName,\n            \"first_name\":firstName,\n            \"last_name\":lastName,\n            \"email\":emailAddress,\n            \"username\":userName,\n            \"phone_number\":phoneNumber,\n            \"start_date\":startDate,\n            \"end_date\":endDate,\n            \"address\":address,\n            \"country_id\":countryId,\n            \"state_id\":stateId,\n            \"city_id\":cityId,\n            \"zip_code\":zipCode,\n            \"keyword\":keyword,\n            \"clientId\":clientId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'client/edit-client', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    sendMessage(subject: string, message: string, useremail: string, fromuser: string, touser: string) {\n      let requestData = {\n          \"subject\":subject,\n          \"message\":message,\n          \"useremail\":useremail,\n          \"fromuser\":fromuser,\n          \"touser\":touser\n      }\n      //console.log(this.commonService.getHttpOptions(localStorage.getItem('currentClinic'),Config.API_OTHERS_KEY));\n      //console.log(Config.API_OTHERS_KEY);\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'client/client-send-message', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    //getClient(id: number) {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'client/getProfile' + id, this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             console.log(res);\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    // }\n    //\n    //clientUpdate(client, id: number) {\n    //    let requestData = {\n    //        \"old_password\":oldPassword,\n    //        \"new_password\":newPassword,\n    //        \"confirm_new_password\":confirmPassword\n    //    }\n    //    return new Promise((resolve, reject) => {\n    //        this.http.post(Config.API_BASE_PATH+'client/create' + id, JSON.stringify(client), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //        .timeout(Config.TIMEOUT_SECONDS)\n    //        .subscribe(res => {\n    //            resolve(res);\n    //        }, (err) => {\n    //            reject(err);\n    //        });\n    //    });\n    //}\n    //\n    //clientDelete(id: number) {\n    //    let requestData = {\n    //        \"old_password\":oldPassword,\n    //        \"new_password\":newPassword,\n    //        \"confirm_new_password\":confirmPassword\n    //    }\n    //    return new Promise((resolve, reject) => {\n    //        this.http.delete(Config.API_BASE_PATH+'client/delete' + id, this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //        .timeout(Config.TIMEOUT_SECONDS)\n    //        .subscribe(res => {\n    //            resolve(res);\n    //        }, (err) => {\n    //            reject(err);\n    //        });\n    //    });\n    //}\n  \n}\n","export * from './authclinic.guard';\nexport * from './adminclinic.auth.guard';","export const Config = {\n\tAPI_BASE_PATH : 'http://34.237.70.31/medirecx-dev-api/api/v1/',\n\t//API_BASE_PATH : 'http://localhost:1337/api/v1/',\n\tAPP_TITLE : 'MediRecX',\n\tTIMEOUT_SECONDS: 3000000000000,\n\tAPI_SUPERADMIN_KEY : \"bXktZW4tcHJvLWRldmVsb3BtZW50LXNlY3JldC1rZXlAMjAxOSE=\",\n\t//API_CLINIC_KEY : \"bXktZW4tcHJvLWRldmVsb3BtZW50LXNlY3JldC1rZXlAMjAxOSE=\",\n\tAPI_OTHERS_KEY : \"aHC$kykHa=aZHC#yZZkA$#HyHaCkH=k#akHkkZ$C$ZaAakHZ\",\n\tBAD_REQUEST_STATUS : 400 ,\n\tSUCCESS_STATUS : 200 ,\n\tREGISTRATION_TITLE: \"Registration\",\n\tSUPPORT_EMAIL: \"support@medirecx.com\",\n\tSUPPORT_PHONE: \"+1 408 655 7179\",\n\tCOMMON_ERROR : 'Something went wrong, please try again later.',\n\tFORGOT_PASSWORD_TITLE: \"Forgot Password\",\n\tRESET_PASSWORD_TITLE: \"Reset Password\",\n\tCHANGE_PASSWORD_TITLE: \"Change Password\",\n\tNOT_FOUND_TITLE: \"404 Not Found\",\n\tSUPERADMIN_TITLE: \"Super Admin\",\n\tCLINIC_TITLE: \"Clinic Title\",\n\tTITLE_SEPRATOR: \" :: \",\n\tLOGIN_TITLE: \"Login\",\n\tBAD_AUTH_STATUS: 401,\n\tUSERNAME_REQUIRED_VALIDATION_MSG: \"Username is required.\",\n\tEMAIL_REQUIRED_VALIDATION_MSG: \"Email is required.\",\n\tEMAIL_FORMAT_VALIDATION_MSG: \"Email address is not vaild.\",\n\tPASSWORD_REQUIRED_VALIDATION_MSG: \"Password is required.\",\n\tPASSWORD_NOT_VALID_VALIDATION_MSG: \"Password should be minimum 8 characters & maximum 16 characters long, alphanumeric, with 1 special character.\",\n\tPASSWORD_MISMATCH_VALIDATION_MSG: \"Password and Confirm Password are not same.\",\n\tCONFIRM_PASSWORD_REQUIRED_VALIDATION_MSG: \"Confirm Password is required.\",\n\tRESET_PASSWORD_SUCCESS_MSG: \"Password has been reset/changed successfully.\",\n\tPAGE_RELOAD_TIMEOUT_SECONDS:500,\n\tSPINNER_TIMEOUT_SECONDS: 100,\n\tBLOCK_UI_TIMEOUT_SECONDS: 2000,\n\tBLOCK_UI_UPDATE_TIMEOUT_SECONDS:850,\n\tAUTHORIZATION_NOT_VALID_STATUS:501,\n\tALERT_AUTO_REMOVE_TIME:2000,\n\tDEFAULT_PAGE_SIZE:10,\n\tFORGOT_PASSWORD_SUCCESS_MSG: \"Please check your email as we have sent you a link to reset your password.\",\n\tPASSWORD_REGX: \"(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*]).{8,16}\",\n\tSIDEBAR_LOGO_PATH: \"assets/img/favicon.png\",\n\tPROFILE_NO_IMG_PATH: \"assets/img/profile-no-img.jpg\",\n\tUNDER_CONSTRUCTION_IMG_PATH: \"assets/img/under-construction-img.jpg\",\t\n\tCLINIC_UNDER_CONSTRUCTION_IMG_PATH: \"assets/img/clinic_uc.png\",\n\tCLINIC_LOGO_DEFAULT_IMG_PATH: \"assets/img/clinic.png\",\n\tOLD_PASSWORD_REQUIRED_VALIDATION_MSG: \"Old Password is required.\",\n\tNEW_PASSWORD_REQUIRED_VALIDATION_MSG: \"New Password is required.\",\n\tNEW_PASSWORD_NOT_VALID_VALIDATION_MSG: \"New Password should be minimum 8 characters & maximum 16 characters long, alphanumeric, with 1 special character.\",\n\tNEW_PASSWORD_MISMATCH_VALIDATION_MSG: \"New Password and Confirm Password are not same.\",\n\tSWAL_LOGOUT_TITLE: \"Ready to Leave?\",\n\tSWAL_LOGOUT_TEXT: \"Select \\\"Logout\\\" below if you are ready to end your current session.\",\n\tSWAL_LOGOUT_CONFIRM_BUTTON_TEXT: \"Logout\",\n\tPLEASE_FILL_REQUIRED_FIELD_MSG : \"Please fill the required fields.\",\n\tUNAME_PATTERN: \"^[a-z0-9_-]{8,16}$\",\n\tUNAME_NOT_VALID_MESSAGE: \"Username should be minimum 8 characters & maximum 16 characters long with alphanumeric.\",\n\tKEYWORD_PATTERN: \"^[a-z0-9]{3,16}$\",\n\tKEYWORD_NOT_VALID_MESSAGE: \"Keyword should be minimum 3 characters & maximum 16 characters long with small characters and number only.\",\n\tCLNAME_PATTERN: \"^[a-zA-Z0-9_ -]{4,20}$\",\n\tCLNAME_NOT_VALID_MESSAGE: \"Clinic name should be minimum 4 characters & maximum 20 characters long with alphanumeric.\",\n\tNAME_PATTERN: \"^(?=.{3,16}$)[a-zA-Z]+(?:[-'\\s][a-zA-Z]+)*$\",\n\tNAME_NOT_VALID_MESSAGE: \"Name should be minimum 3 characters & maximum 16 characters long with alphabate.\",\n\tPHONE_PATTERN: \"^((\\\\+91-?)|0)?[0-9]{10}$\",\n\tZIP_PATTERN: \"^[0-9]{6}\",\n\tPHONE_NOT_VALID_MESSAGE: \"Phone number should of 10 character numeric only.\",\n\tZIP_NOT_VALID_MESSAGE: \"Zip code should of 6 character numeric only.\",\n\tEMAIL_PATTERN: \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\",\n\tEMAIL_NOT_VALID_MESSAGE: \"Please enter valid email format.\",\n\tSTATUS_UPDATED_SUCCESSFULLY: \"Status updated successfully.\",\t\n\tDOCUMENT_ADDED_SUCCESSFULLY: \"Document added successfully.\",\n\tDOCUMENT_UPDATED_SUCCESSFULLY: \"Document updated successfully.\",\n\tDOCUMENT_DELETED_SUCCESSFULLY: \"Document deleted successfully.\",\t\n\tROLE_ADDED_SUCCESSFULLY: \"Role added successfully.\",\n\tROLE_UPDATED_SUCCESSFULLY: \"Role updated successfully.\",\n\tROLE_DELETED_SUCCESSFULLY: \"Role deleted successfully.\",\n\tCLAIM_ADDED_SUCCESSFULLY: \"Claim added successfully.\",\n\tCLAIM_UPDATED_SUCCESSFULLY: \"Claim updated successfully.\",\n\tCLAIM_DELETED_SUCCESSFULLY: \"Status updated successfully.\",\n\tPROFILE_UPDATED_SUCCESSFULLY: \"Profile updated successfully.\",\n\tCLINIC_ACCUOUNT_EXPIRED: \"Account expired. Please contact to administrator.\",\n\tPROFILE_IMG_S3_PATH: \"https://medirecx.s3.amazonaws.com/user-avtar/\",\n\tDOC_IMG_S3_PATH: \"https://medirecx.s3.amazonaws.com/document/\",\n\tMESSAGE_SEND_SUCCESSFULLY: \"Message sent successfully.\",\n\tSUBDOMAIN: \"\",\n\tSTATUS:\"<html><body><ul><li>Uploaded</li><li> Sent to Medpro</li><li>Sent to Doctor</li><li>Reviewed by Medpro</li><li>Reviewed by Doctor</li><li>Doctor sent to medpro</li><li>Medpro sent to clinic</li><li>Completed</li><li>Inactive</li></ul></body></html>\"\n\t\n}\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://ec2-34-237-70-31.compute-1.amazonaws.com/medirecx-dev-api/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Config } from '../constant';\n@Injectable()\nexport class AdminclinicAuthGuard implements CanActivate {\n    constructor(\n        private router: Router\n    ) {}\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {\n        let url: string = state.url;\n        return this.checkLogin(url);\n    }\n    checkLogin(url: string): boolean {\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        if (!currentClinic || !currentClinic.id) {\n            this.router.navigate(['/clinic/login']);\n            return false;\n        }\n        return true;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n//import { Client } from '../_models/client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n  private loggedIn = new BehaviorSubject<boolean>(false);\n    get isClinicLoggedIn() {\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        if (currentClinic && currentClinic.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n  \n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n    \n    getRoleById(roleId: number) {\n        let requestData = {\n            \"roleId\":roleId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'role/get-role', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getRoles() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'role/list?domain=\"clinic\"', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n    }\n    \n    //getarchivedClients() {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'client/archivedlist', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             console.log(res);\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    //}\n    \n    deleteRole(id: number) {      \n      let requestData = {\n          \"id\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'role/delete-role', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n    \n    updateStatus(id: number) {      \n      let requestData = {\n          \"roleId\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'role/update-role-status', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n\n     \n    roleRegister(title: string, description: string) {\n      let requestData = {\n          \"title\":title,\n          \"description\":description\n      }\n      console.log(this.commonService.getHttpOptions(localStorage.getItem('currentClinic'),Config.API_OTHERS_KEY));\n      //console.log(Config.API_OTHERS_KEY);\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'role/add-role', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    roleUpdate(title: string, description: string, roleId: string) {\n        let requestData = {\n            \"title\":title,\n            \"description\":description,\n            \"id\":roleId\n        }\n        //console.log(requestData);\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'role/edit-role', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminclinicAuthService {\n    private loggedIn = new BehaviorSubject<boolean>(false);\n    get isClinicLoggedIn() {\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        if (currentClinic && currentClinic.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n\n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n    \n    login(username: string, password: string) { \n        let requestData = {\n            'username':username,\n            'password':password\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'clinic/login', JSON.stringify(requestData), this.commonService.getHttpOptions(null,Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => { //console.log(res[\"data\"]);\n                if(res[\"status\"]==Config.SUCCESS_STATUS){\n                    this.loggedIn.next(true);\n                    localStorage.setItem('currentClinic', JSON.stringify(res[\"data\"]));\n                    localStorage.setItem('currentClinicToken',JSON.stringify(res[\"data\"][\"token\"]));\n                    resolve(res);\n                }else{\n                    resolve(res);\n                }\n            }, (err) => { \n                reject(err);\n            });\n        });\n    }\n    \n    logout() {\n        localStorage.removeItem('currentClinic');\n        localStorage.removeItem('currentClinicToken');\n        localStorage.clear();\n        this.loggedIn.next(false);\n        this.router.navigate(['/clinic/login']);\n    }\n\n    forgotPassword(email: string) {\n        let requestData = {\n            'email':email\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'clinic/forgot-password', JSON.stringify(requestData), this.commonService.getHttpOptions(null,Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    resetPassword(password: string, confirmPassword: string, resetToken:string) {\n        let requestData = {\n            \"password\":password,\n            \"confirm_password\":confirmPassword,\n            \"reset_token\":resetToken\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'clinic/reset-password', JSON.stringify(requestData), this.commonService.getHttpOptions(null,Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    changePassword(oldPassword: string, newPassword: string, confirmPassword:string) {\n        let requestData = {\n            \"old_password\":oldPassword,\n            \"new_password\":newPassword,\n            \"confirm_new_password\":confirmPassword\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'clinic/change-password', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    // refreshToken() {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'superadmin/refresh-token', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             console.log(res);\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    // }\n\n    // userProfile(accessToken:string) {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'AppUsers/user-profile', this.commonService.getHttpOptions(accessToken))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    // }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BlockUIModule } from 'ng-block-ui';\n\nimport { BlockElementComponent } from './block-element.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BlockUIModule\n  ],\n  declarations: [\n    BlockElementComponent\n  ],\n  exports: [\n    BlockElementComponent\n  ],\n  entryComponents: [ BlockElementComponent ]\n})\nexport class BlockElementModule { }","import { Component } from '@angular/core';\n@Component({\n  styles: [`\n    :host {\n      color: #fff;\n    }\n  `],\n  template: `\n    <div class=\"block-ui-template\">\n      <div class=\"preloader\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class BlockTemplateComponent {\n  constructor() {}\n}","export * from './authentication.service';\nexport * from './authenticationclinic.service';\nexport * from './user.service';\nexport * from './common.service';\nexport * from './admin.auth.service';\nexport * from './adminclinic.auth.service';\nexport * from './client.service';\nexport * from './patient.service';\nexport * from './role.service';\nexport * from './business.service';","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { Config } from '../constant';\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private authService: AuthenticationService,\n        private router: Router\n    ) {}\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {\n        let url: string = state.url;\n        return this.checkLogin(url);\n    }\n    checkLogin(url: string): boolean {\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (!currentUser || !currentUser.id) {\n            this.router.navigate(['/login']);\n            return false; \n        }\n        return true;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationclinicService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n     login(email: string, password: string) {\n     //let headers = new HttpHeaders();\n     //headers = headers.append('Content-Type', 'application/json');\n     //headers = headers.append('appkey', 'bXktZW4tcHJvLWRldmVsb3BtZW50LXNlY3JldC1rZXlAMjAxOSE=');\n     //    return this.http.post<any>(`${environment.apiUrl}/superadmin/login`, { email, password },{ headers })\n     //        .pipe(map(user => {\n     //      \n     //            // store user details and jwt token in local storage to keep user logged in between page refreshes\n     //            localStorage.setItem('user', JSON.stringify(user));\n     //            this.userSubject.next(user);\n     //            return user;\n     //        }));\n     }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/login']);\n    }\n    // forgotPassword(email: string) {\n    //  console.log(email)\n    //     // remove user from local storage to log user out\n    //     let headers = new HttpHeaders();\n    // headers = headers.append('Content-Type', 'application/json');\n    // headers = headers.append('appkey', 'bXktZW4tcHJvLWRldmVsb3BtZW50LXNlY3JldC1rZXlAMjAxOSE=');\n    //     return this.http.post<any>(`${environment.apiUrl}/superadmin/forgot-password`, { email},{ headers })\n    //         .pipe(map(res => {\n    //             return res;\n    //         }));\n       \n    // }\n    \n    \n}","import { Component, ComponentRef, OnInit } from '@angular/core';\nimport { BlockUI, NgBlockUI, BlockUIService } from 'ng-block-ui';\nimport { Config }from './constant';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n    @BlockUI() blockUI: NgBlockUI;\n    @BlockUI('block-element') elementBlockUI: NgBlockUI;\n    defaultMessage: string = 'Default Message...';\n    timeout: number = Config.BLOCK_UI_TIMEOUT_SECONDS;\n    blockInstances = ['block-element', 'block-element-2', 'block-element-3'];\n    constructor(\n        private blockUIService: BlockUIService\n    ) {\n    }\n    blockMain(message: string) {\n        this.blockUI.start(message);\n        setTimeout((blockUI) => {\n            this.blockUI.stop();\n        }, this.timeout);\n    }\n\n    blockElement() {\n        this.elementBlockUI.start();\n        setTimeout((blockUI) => {\n          this.elementBlockUI.stop();\n        }, this.timeout);\n    }\n\n    blockAllElements() {\n        this.blockUIService.start(this.blockInstances, 'Loading All');\n        setTimeout((blockUI) => {\n          this.blockUIService.stop(this.blockInstances);\n        }, this.timeout);\n    }\n\n    blockUpdate() {\n        let messages: string[] = ['Logining In', 'Loading Settings', 'Loading Widgets'],\n          i = 0,\n          interval: any;\n\n        this.elementBlockUI.start('Welcome');\n\n        interval = setInterval(() => {\n          this.elementBlockUI.update(messages[i]);\n          i++;\n\n          if (i > messages.length) {\n            this.elementBlockUI.stop();\n            clearInterval(interval);\n          }\n        }, Config.BLOCK_UI_UPDATE_TIMEOUT_SECONDS);\n    }\n\n    ngOnInit() {\n    }\n}\n","<block-ui>\n\t<router-outlet>\n\t    <app-spinner></app-spinner>\n\t</router-outlet>\n</block-ui>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    private loggedIn = new BehaviorSubject<boolean>(false);\n    get isClinicLoggedIn() {\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        if (currentClinic && currentClinic.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n  \n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n    \n    getUserById(userId: number) {\n        let requestData = {\n            \"userId\":userId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'user/get-profile', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getUsers() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'user/list', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n    }\n    \n    getMessages() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'user/message-list', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n    }\n    \n    //getarchivedClients() {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'client/archivedlist', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             console.log(res);\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    //}\n    \n    deleteUser(id: number) {      \n      let requestData = {\n          \"id\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'user/delete-user', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n    \n    updateStatus(id: number) {      \n      let requestData = {\n          \"userId\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'user/update-user-status', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n\n     \n    //userRegister(firstName: string, lastName:string,emailAddress: string, phoneNumber:string,username: string, password: string, dateOfBirth: string, role: string, address:string,countryId: string, stateId: string, cityId:string, zipCode: string, emergencyContact:string, maritialStatus:string, profileImage:string) {\n    //    let requestData = {\n    //        \"first_name\":firstName,\n    //        \"last_name\":lastName,\n    //        \"email\":emailAddress,           \n    //        \"username\":username,\n    //        \"password\":password,\n    //        \"role_id\":role,\n    //        \"phone_number\":phoneNumber,  \n    //        \"address\":address,\n    //        \"country_id\":countryId,\n    //        \"state_id\":stateId,\n    //        \"city_id\":cityId,\n    //        \"zip_code\":zipCode,\n    //        \"image_url \":profileImage,            \n    //        \"date_of_birth \":dateOfBirth,\n    //        \"emergency_contact\":emergencyContact,\n    //        \"marital_status\":maritialStatus\n    //    }\n    //  return new Promise((resolve, reject) => {\n    //      this.http.post(Config.API_BASE_PATH+'user/add-user', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY))\n    //      .timeout(Config.TIMEOUT_SECONDS)\n    //      .subscribe(res => {\n    //          resolve(res);\n    //      }, (err) => {\n    //          reject(err);\n    //      });\n    //  });\n    //}\n    \n    userRegister( postData: any){\n        \n          return new Promise((resolve, reject) => {\n              this.http.post(Config.API_BASE_PATH+'user/add-user', postData, this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN,'image'))\n              .timeout(Config.TIMEOUT_SECONDS)\n              .subscribe(res => {\n                  resolve(res);\n              }, (err) => {\n                  reject(err);\n              });\n          });\n    \n    }\n    \n    userUpdate( postData: any) {\n        \n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'user/edit-user', postData, this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN,'image'))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getRoles() {\n        return new Promise((resolve, reject) => {\n            this.http.get(Config.API_BASE_PATH+'role/list', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                console.log(res);\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getCountries() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'country-list?subdomain=sms', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n     }\n     \n    getStatesById(countryId: number) {\n        let requestData = {\n            \"country_id\":countryId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'state-list-by-country-id', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getCitiesById(stateId: number) {\n      let requestData = {\n          \"state_id\":stateId\n      }\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'city-list-by-state-id', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    sendMessage(subject: string, message: string, useremail: string, fromuser: string, touser: string,claimNo?:string,wcabNo?:string) {\n      let requestData = {\n          \"subject\":subject,\n          \"message\":message,\n          \"useremail\":useremail,\n          \"fromuser\":fromuser,\n          \"touser\":touser,\n          \"claim_no\":claimNo,\n          \"wcab_no\":wcabNo\n      }\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'user/user-send-message', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n}","export * from './error.interceptor';","import { Injectable} from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Config }from '../constant';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\n\n@Injectable()\nexport class CommonService {\n\thttpOptions:any;\n    currentUser: any;\n    returnUrl: string;\n    accessToken: string;\n    constructor(\n        private http: HttpClient, \n        private titleService: Title,  \n        private router: Router, \n        private route: ActivatedRoute) { \n    }\n    setPageTitle(pageTitle){\n        this.titleService.setTitle(Config.APP_TITLE+Config.TITLE_SEPRATOR+pageTitle);\n    }\n    // getPageUrl(url){\n    // \treturn '/'+url;\n    // }\n    getHttpOptions(accessToken=null,appKey,subDomain=null,reqType=null){\n        let httpOptions:any = {};\n\t\t//console.warn(Config.SUBDOMAIN);\n\t\t//console.warn(accessToken);\n        subDomain = Config.SUBDOMAIN;\n        if(accessToken && accessToken.length > 0 && reqType == 'image'){\n\t\t\t//console.warn(\"inside\");\n            accessToken = accessToken.replace(/(^\"|\"$)/g, '');\n            httpOptions = {\n                headers: new HttpHeaders({ \n                    //'Content-Type': 'application/json; charset=utf-8',\n\t\t\t\t\t//'Content-Type': undefined,\n                    //'Accept': 'application/json',\n                    'Authorization': 'Bearer '+accessToken,\n                    'appkey': appKey,\n\t\t\t\t\t'subDomain': subDomain\n                })\n            };    \n            return httpOptions;\n        }else  if(accessToken && accessToken.length > 0){\n\t\t\t//console.warn(\"outside\");\n            accessToken = accessToken.replace(/(^\"|\"$)/g, '');\n            httpOptions = {\n                headers: new HttpHeaders({ \n                    'Content-Type': 'application/json; charset=utf-8',\n                    'Accept': 'application/json',\n\t\t\t\t\t'Authorization': 'Bearer '+accessToken,\n                    'appkey': appKey,\n\t\t\t\t\t'subDomain' : subDomain\n                })\n            };    \n            return httpOptions;\n        }else{\n            httpOptions = {\n                headers: new HttpHeaders({ \n                    'Content-Type': 'application/json; charset=utf-8',\n                    'Accept': 'application/json',\n                    'appKey': appKey,\n\t\t\t\t\t'subDomain' : subDomain\n                })\n            };    \n            return httpOptions;\n        }\n\t}\n    // reloadUrl(returnUrl){\n    //     setTimeout(()=>{\n    //         this.router.navigate([returnUrl])\n    //     }, Config.PAGE_RELOAD_TIMEOUT_SECONDS);\n    // }\n    // checkLogin(){\n    //     let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    //     let routerUrl = this.router.url;\n    //     let returnUrl = routerUrl || '/';\n    //     if (currentUser && currentUser.id) {\n    //         if(routerUrl.includes(Config.LOGIN_URL) || routerUrl.includes(Config.FORGOT_PASSWORD_URL) || routerUrl.includes(Config.REGISTRATION_VERIFY_URL) || routerUrl.includes(Config.RESET_PASSWORD_URL)){\n    //             this.router.navigate(['/']);\n    //         }else{\n    //             this.router.navigate([returnUrl]);\n    //         }\n    //     }else{\n    //         if(!routerUrl.includes(Config.FORGOT_PASSWORD_URL) && !routerUrl.includes(Config.REGISTRATION_VERIFY_URL) && !routerUrl.includes(Config.RESET_PASSWORD_URL)){\n    //             this.router.navigate([returnUrl+'login']);\n    //         }\n    //     }\n    // }\n    checkSuperAdminLogin(){\n        let currentSuperAdmin = JSON.parse(localStorage.getItem('currentSuperAdmin'));\n        let routerUrl = this.router.url;\n        let returnUrl = routerUrl || '/';\n        if (currentSuperAdmin && currentSuperAdmin.id) {\n            if(routerUrl.includes('login') || routerUrl.includes('forgot-password') || routerUrl.includes('reset-password')){\n                this.router.navigate(['/']);\n            }else{\n                this.router.navigate([returnUrl]);\n            }\n        }else{\n            if(!routerUrl.includes('forgot-password') && !routerUrl.includes('reset-password')){\n                this.router.navigate([returnUrl+'login']);\n            }\n        }\n    }\n\n    commonSuperAdminLogout(){\n        localStorage.removeItem('currentSuperAdmin');\n        localStorage.removeItem('currentSuperAdminToken');\n        localStorage.clear();\n        return true;\n    }\n    \n    getLoggedInSuperAdminData(){\n        return JSON.parse(localStorage.getItem('currentSuperAdmin'));\n    }\n\t\n\t/************************** Clinic Module Service ******************/\n\t\n\tcheckClinicLogin(){\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        let routerUrl = this.router.url;\n        let returnUrl = routerUrl || '/';\n        if (currentClinic && currentClinic.id) {\n            if(routerUrl.includes('login') || routerUrl.includes('forgot-password') || routerUrl.includes('reset-password')){\n                this.router.navigate(['/']);\n            }else{\n                this.router.navigate([returnUrl]);\n            }\n        }else{\n            if(!routerUrl.includes('forgot-password') && !routerUrl.includes('reset-password')){\n                this.router.navigate([returnUrl+'login']);\n            }\n        }\n    }\n\n    commonClinicLogout(){\n        localStorage.removeItem('currentClinic');\n        localStorage.removeItem('currentClinicToken');\n        localStorage.clear();\n        return true;\n    }\n    \n    getLoggedInClinicData(){\n        return JSON.parse(localStorage.getItem('currentClinic'));\n    }\n\n    // getLoggedInUserData(){\n    //     return JSON.parse(localStorage.getItem('currentUserDetails'));\n    // }\n\n    \n\n    // commonLogout(){\n    //     localStorage.removeItem('currentUser');\n    //     localStorage.removeItem('currentUserDetails');\n    //     localStorage.clear();\n    //     return true;\n    // }\n\n    // getPageSizeOptions(){\n    //     const pageSizeoptions = [5, 10, 20, 50, 100];\n    //     return pageSizeoptions;  \n    // }\n\n    // getDefaultPageSize(){\n    //     const defaultPageSize = Config.DEFAULT_PAGE_SIZE;\n    //     return defaultPageSize;  \n    // }\n    // validateContactFile(file:any){\n    //     if(file.type != Config.UPLOAD_CONTACT_VALID_FILE_FORMAT){\n    //         return Config.CONTACT_FILE_FORMAT_VALIDATION_MESSAGE;\n    //     }if(parseInt(file.size) > Config.UPLOAD_CONTACT_VALID_FILE_SIZE){\n    //         return Config.CONTACT_FILE_SIZE_VALIDATION_MESSAGE;\n    //     }\n    //     return true;\n    // }\n    \n    // validateFile(file:any){\n    //     if(parseInt(file.size) > Config.UPLOAD_CONTACT_VALID_FILE_SIZE){\n    //         return Config.CONTACT_FILE_SIZE_VALIDATION_MESSAGE;\n    //     }\n    //     return true;\n    // }\n\n    \n\n    // checkAdmin(){\n    //     let currentUserDetails = JSON.parse(localStorage.getItem('currentUserDetails'));\n    //     // if(currentUserDetails && currentUserDetails.roleInfo && currentUserDetails.roleInfo.name && currentUserDetails.roleInfo.name == Config.ADMIN_STR){\n    //     //     return true;\n    //     // }\n    //     return false;\n    // }\n\n    /*dateFormatForGetGroupLives(date){\n        var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n        if (month.length < 2) month = '0' + month;\n        if (day.length < 2) day = '0' + day;\n        return [year, month, day].join('-');\n    }*/\n}","import { BrowserModule, Title} from '@angular/platform-browser';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorInterceptor } from './_helpers';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { PerfectScrollbarModule, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { BlockUIModule } from 'ng-block-ui';\nimport { BlockUIRouterModule, BlockUIPreventNavigation } from 'ng-block-ui/router';\nimport { BlockUIHttpModule } from 'ng-block-ui/http';\nimport { BlockElementModule } from './block-element/block-element.module';\nimport { BlockTemplateComponent } from './block-template/block-template.component';\nimport { SpinnerComponent } from './shared/spinner/spinner.component';\nimport { AdminAuthGuard } from './_guards';\nimport { AdminclinicAuthGuard } from './_guardsclinic';\nimport { CommonService } from './_services';\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelSpeed: 2,\n  wheelPropagation: true,\n};\n@NgModule({\n    declarations: [\n        AppComponent,\n        NotFoundComponent,\n        BlockTemplateComponent,\n        SpinnerComponent\n    ],\n\timports: [\n\t\tCommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        RouterModule.forRoot([]),\n        AppRoutingModule,\n        ReactiveFormsModule,\n        ToastrModule.forRoot(),\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tPerfectScrollbarModule,\n\t\tBlockElementModule,\n\t    BlockUIModule.forRoot({\n      \t\tmessage: '',\n            delayStop: 3000,\n      \t\ttemplate: BlockTemplateComponent\n    \t}),\n        BlockUIRouterModule.forRoot(),\n        BlockUIHttpModule.forRoot({\n            requestFilters: []\n        })\n    ],\n\tentryComponents: [\n        BlockTemplateComponent\n    ],\n    providers: [\n\t\t{\n            provide: PERFECT_SCROLLBAR_CONFIG,\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\n        },\n        {\n            provide: LocationStrategy,\n            useClass: PathLocationStrategy\n        },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n        Title,\n        AdminAuthGuard,\n        AdminclinicAuthGuard,\n        CommonService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthService {\n    private loggedIn = new BehaviorSubject<boolean>(false);\n    get isSuperAdminLoggedIn() {\n        let currentSuperAdmin = JSON.parse(localStorage.getItem('currentSuperAdmin'));\n        if (currentSuperAdmin && currentSuperAdmin.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n\n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n    \n    login(username: string, password: string) { console.log(\"superadmin login\");\n        let requestData = {\n            'email':username,\n            'password':password\n        }\n        return new Promise((resolve, reject) => {\n          console.log(Config.API_BASE_PATH);\n            this.http.post(Config.API_BASE_PATH+'superadmin/login', JSON.stringify(requestData), this.commonService.getHttpOptions(null,Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                if(res[\"status\"]==Config.SUCCESS_STATUS){\n                    this.loggedIn.next(true);\n                    localStorage.setItem('currentSuperAdmin', JSON.stringify(res[\"data\"]));\n                    localStorage.setItem('currentSuperAdminToken',JSON.stringify(res[\"data\"][\"token\"]));\n                    resolve(res);\n                }else{\n                    resolve(res);\n                }\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    logout() {\n        localStorage.removeItem('currentSuperAdmin');\n        localStorage.removeItem('currentSuperAdminToken');\n        localStorage.clear();\n        this.loggedIn.next(false);\n        this.router.navigate(['/superadmin/login']);\n    }\n\n    forgotPassword(email: string) {\n        let requestData = {\n            'email':email\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'superadmin/forgot-password', JSON.stringify(requestData), this.commonService.getHttpOptions(null,Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    resetPassword(password: string, confirmPassword: string, resetToken:string) {\n        let requestData = {\n            \"password\":password,\n            \"confirm_password\":confirmPassword,\n            \"reset_token\":resetToken\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'superadmin/reset-password', JSON.stringify(requestData), this.commonService.getHttpOptions(null,Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    changePassword(oldPassword: string, newPassword: string, confirmPassword:string) {\n        let requestData = {\n            \"old_password\":oldPassword,\n            \"new_password\":newPassword,\n            \"confirm_new_password\":confirmPassword\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'superadmin/change-password', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    // refreshToken() {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'superadmin/refresh-token', this.commonService.getHttpOptions(localStorage.getItem('currentSuperAdminToken'),Config.API_SUPERADMIN_KEY))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             console.log(res);\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    // }\n\n    // userProfile(accessToken:string) {\n    //     return new Promise((resolve, reject) => {\n    //         this.http.get(Config.API_BASE_PATH+'AppUsers/user-profile', this.commonService.getHttpOptions(accessToken))\n    //         .timeout(Config.TIMEOUT_SECONDS)\n    //         .subscribe(res => {\n    //             resolve(res);\n    //         }, (err) => {\n    //             reject(err);\n    //         });\n    //     });\n    // }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n//import { Client } from '../_models/client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusinessService {\n  private loggedIn = new BehaviorSubject<boolean>(false);\n    get isClinicLoggedIn() {\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        if (currentClinic && currentClinic.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n  \n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n    \n    getBusinessById(businessId: number) {\n        let requestData = {\n            \"businessId\":businessId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'business/get-business', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    businessUpdate( postData: any) {\n        \n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'business/edit-business', postData, this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN,'image'))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n        \n    //businessUpdate(clinicname: string, firstname: string, lastname: string, emailaddress: string, phonenumber: string, address: string, zip: string, businessId: string) {\n    //  let requestData = {\n    //      \"clinicname\":clinicname,\n    //      \"firstname\":firstname,\n    //      \"lastname\":lastname,\n    //      \"emailaddress\":emailaddress,\n    //      \"phonenumber\":phonenumber,\n    //      \"address\":address,\n    //      \"zip\":zip,\n    //      \"businessid\":businessId\n    //  }\n    //  //console.log(requestData);\n    //  return new Promise((resolve, reject) => {\n    //      this.http.post(Config.API_BASE_PATH+'business/edit-business', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n    //      .timeout(Config.TIMEOUT_SECONDS)\n    //      .subscribe(res => {\n    //          resolve(res);\n    //      }, (err) => {\n    //          reject(err);\n    //      });\n    //  });\n    //}\n    \n     getCountries() {\n         return new Promise((resolve, reject) => {\n             this.http.get(Config.API_BASE_PATH+'country-list?subdomain=sms', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n             .timeout(Config.TIMEOUT_SECONDS)\n             .subscribe(res => {\n                 console.log(res);\n                 resolve(res);\n             }, (err) => {\n                 reject(err);\n             });\n         });\n     }\n     \n    getStatesById(countryId: number) {\n        let requestData = {\n            \"country_id\":countryId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'state-list-by-country-id', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getCitiesById(stateId: number) {\n      let requestData = {\n          \"state_id\":stateId\n      }\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'city-list-by-state-id', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n}\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { Config }from '../../constant';\n\n@Component({\n    selector: 'app-spinner',\n    templateUrl: './spinner.component.html',\n    styleUrls: ['./spinner.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n    public isSpinnerVisible = true;\n   \n    @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n    \n    constructor(private router: Router, @Inject(DOCUMENT) private document: Document) {\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                this.isSpinnerVisible = true;\n            } else if ( event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n                setTimeout(()=>{\n                    this.isSpinnerVisible = false;\n                },Config.SPINNER_TIMEOUT_SECONDS);\n            }\n        }, () => {\n            this.isSpinnerVisible = false;\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.isSpinnerVisible = false;\n    }\n}\n","<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n    <div class=\"spinner\">\n      <div class=\"double-bounce1\"></div>\n      <div class=\"double-bounce2\"></div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/timeout';\nimport { BehaviorSubject } from 'rxjs';\nimport { Config } from  '../constant';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../_services/common.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  private loggedIn = new BehaviorSubject<boolean>(false);\n    get isClinicLoggedIn() {\n        let currentClinic = JSON.parse(localStorage.getItem('currentClinic'));\n        if (currentClinic && currentClinic.id) {\n            this.loggedIn.next(true);    \n        }\n        return this.loggedIn.asObservable();\n    }\n  \n    constructor(private http: HttpClient,\n        private router: Router,\n        private commonService: CommonService) { \n    }\n  \n    getDoctors() {\n      return new Promise((resolve, reject) => {\n          this.http.get(Config.API_BASE_PATH+'patient/list-doctors', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              //console.log(res);\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    getStatus() {\n        return new Promise((resolve, reject) => {\n            this.http.get(Config.API_BASE_PATH+'patient/list-status', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                //console.log(res);\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n      }\n    \n    getMedpros() {\n      return new Promise((resolve, reject) => {\n          this.http.get(Config.API_BASE_PATH+'patient/list-medpros', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              //console.log(res);\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    patientRegister(firstName: string, lastName:string, dateOfBirth: string, contctInfo: string,wcabNo: string,claimNo:string,appAttorney: string,employer: string,defAttorney: string, doctorId:string,medproId: string,supplementaryWcabno:string | null) {\n        let requestData = {\n            \"first_name\":firstName,\n            \"last_name\":lastName,\n            \"date_of_birth\":dateOfBirth,\n            \"contact_info\":contctInfo,\n            \"case_no\":wcabNo,\n            \"claim_no\":claimNo,\n            \"applicant_attorney\":appAttorney,\n            \"employer\":employer,\n            \"defendant_attorney\":defAttorney,\n            \"doctor_id\":doctorId,\n            \"medpro_id\":medproId,\n            \"supplementary_wcabno\":supplementaryWcabno\n        }\n        //console.warn(requestData);\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'patient/add-patient', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n              console.log(res);\n                resolve(res);\n            }, (err) => {\n              console.log(err);\n                reject(err);\n            });\n        });\n    }\n    \n    getClaims(roleId: number) {\n      let requestData = {\n            \"roleId\":roleId\n        }\n       // console.log(roleId);\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'patient/list-claims', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              //console.log(res);\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    getArchivedClaims() {  //console.log(Config.SUBDOMAIN); \n      return new Promise((resolve, reject) => {\n          this.http.get(Config.API_BASE_PATH+'patient/list-archived-claims', this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              //console.log(res);\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    getClaimById(claimId: number) {\n        let requestData = {\n            \"claimId\":claimId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'patient/get-claim-detail', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    addDocument( postData: any) {\n      //console.log(postData);\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'patient/add-document', postData, this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN,'image'))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    getDocumentsByClaimId(claimId: number) {\n        let requestData = {\n            \"claimId\":claimId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'patient/list-document', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    claimUpdate(firstName: string, lastName: string, contactInfo: string, appAttorney: string, employer: string, defAttorney: string, patientId: string,dateOfBirth:string) {\n      let requestData = {\n          \"firstName\":firstName,\n          \"lastName\":lastName,\n          \"contactInfo\":contactInfo,\n          \"appAttorney\":appAttorney,\n          \"employer\":employer,\n          \"defAttorney\":defAttorney,\n          \"patientId\":patientId,\n          \"date_of_birth\":dateOfBirth\n      }\n      //console.log(requestData);\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'patient/edit-patient', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    deleteClaim(id: number) {      \n      let requestData = {\n          \"id\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'patient/delete-claim', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n    \n    updateClaimStatus(id: number, roleId: number, claimId: number) {      \n      let requestData = {\n          \"userId\":id,\n          \"roleId\":roleId,\n          \"claimId\":claimId\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'patient/update-claim-status', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n    updateClaimStatusbyClaimId(claimId: number,Status:string) {      \n        let requestData = {\n            \"status\":Status,\n            \"claimId\":claimId\n        }      \n        return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'patient/update-status-claimId', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n        });\n      }\n    deleteDocument(id: number) {      \n      let requestData = {\n          \"id\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'patient/delete-document', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n    \n    getDocumentById(documentId: number) {\n        let requestData = {\n            \"documentId\":documentId\n        }\n        return new Promise((resolve, reject) => {\n            this.http.post(Config.API_BASE_PATH+'patient/get-document-detail', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n            .timeout(Config.TIMEOUT_SECONDS)\n            .subscribe(res => {\n                resolve(res);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n    \n    documentUpdate(documentNote: string, expectedDate: string, documentId: string) {\n      let requestData = {\n          \"documentNote\":documentNote,\n          \"expectedDate\":expectedDate,\n          \"documentId\":documentId\n      }\n      //console.log(requestData);\n      return new Promise((resolve, reject) => {\n          this.http.post(Config.API_BASE_PATH+'patient/edit-document', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n          .subscribe(res => {\n              resolve(res);\n          }, (err) => {\n              reject(err);\n          });\n      });\n    }\n    \n    updateStatus(id: number) {      \n      let requestData = {\n          \"documentId\":id\n      }      \n      return new Promise((resolve, reject) => {\n        this.http.post(Config.API_BASE_PATH+'patient/update-document-status', JSON.stringify(requestData), this.commonService.getHttpOptions(localStorage.getItem('currentClinicToken'),Config.API_OTHERS_KEY,Config.SUBDOMAIN))\n          .timeout(Config.TIMEOUT_SECONDS)\n        .subscribe(res => {\n            resolve(res);\n        }, (err) => {\n            reject(err);\n        });\n      });\n    }\n    \n    \n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AdminAuthService } from '@app/_services';\nimport { AdminclinicAuthService } from '@app/_services';\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private adminAuthService: AdminAuthService,\n                private adminclinicAuthService: AdminclinicAuthService) { }\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                if(request[\"url\"].indexOf('superadmin') !== -1){\n                    this.adminAuthService.logout();\n                }else if(request[\"url\"].indexOf('clinic') !== -1){\n                    this.adminclinicAuthService.logout();\n                }else{\n                    //this.authenticationService.logout();    \n                }\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonService } from '../_services';\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(private route : ActivatedRoute, private commonService : CommonService) { \n  \tthis.commonService.setPageTitle(this.route.snapshot.data['title']);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-xl-6 col-lg-8 col-md-5\">\n      <div class=\"card o-hidden border-0 shadow-lg my-5\">\n        <div class=\"card-body p-0\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <div class=\"p-5\">\n                <div class=\"text-center\">\n                  <img src=\"assets/img/logo.png\" alt=\"app-logo\" class=\"logo\">\n                  <!-- <div class=\"error mx-auto\" data-text=\"404\">404</div> -->\n                  <div class=\"lead text-gray-800\" data-text=\"404\">404</div>\n                  <p class=\"lead text-gray-800 mb-5\">Page Not Found</p>\n                  <p class=\"text-gray-500 mb-0\">It looks like you found a glitch in the matrix...</p>\n                  <a href=\"\">&larr; Back</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n  \n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n     login(email: string, password: string) {\n     //let headers = new HttpHeaders();\n     //headers = headers.append('Content-Type', 'application/json');\n     //headers = headers.append('appkey', 'bXktZW4tcHJvLWRldmVsb3BtZW50LXNlY3JldC1rZXlAMjAxOSE=');\n     //    return this.http.post<any>(`${environment.apiUrl}/superadmin/login`, { email, password },{ headers })\n     //        .pipe(map(user => {\n     //      \n     //            // store user details and jwt token in local storage to keep user logged in between page refreshes\n     //            localStorage.setItem('user', JSON.stringify(user));\n     //            this.userSubject.next(user);\n     //            return user;\n     //        }));\n     }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/login']);\n    }\n    // forgotPassword(email: string) {\n    //  console.log(email)\n    //     // remove user from local storage to log user out\n    //     let headers = new HttpHeaders();\n    // headers = headers.append('Content-Type', 'application/json');\n    // headers = headers.append('appkey', 'bXktZW4tcHJvLWRldmVsb3BtZW50LXNlY3JldC1rZXlAMjAxOSE=');\n    //     return this.http.post<any>(`${environment.apiUrl}/superadmin/forgot-password`, { email},{ headers })\n    //         .pipe(map(res => {\n    //             return res;\n    //         }));\n       \n    // }\n    \n    \n}","export * from './auth.guard';\nexport * from './admin.auth.guard';","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Config } from './constant';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { SuperAdminComponent } from './superadmin/superadmin.component';\nimport { ClinicComponent } from './clinic/clinic.component';\nimport { BlockUIPreventNavigation } from 'ng-block-ui/router';\nconst fullURL = (window.location.host).split('.');\n\nvar subDomain = '';\nconsole.log(`Full URL : ${fullURL}`);\nconsole.log(`Length of Full URL : ${fullURL.length}`);\nif(fullURL.length == 3){\n    subDomain = fullURL[0];\n    Config.SUBDOMAIN = 'medirecx_'+subDomain;\n}\nconsole.log(`Subdomain :${subDomain}`);\n//var subDomain = 'sms';\n//Config.SUBDOMAIN = 'medirecx_'+subDomain;\n\nvar routes: Routes = [];\nif(subDomain !== ''){\n    console.log('if');\n    //routes.push({\n    //    path: '404', \n    //    component: NotFoundComponent,\n    //    canActivateChild: [BlockUIPreventNavigation],\n    //    data: {\n    //        title:Config.NOT_FOUND_TITLE\n    //    }\n    //});\n    //routes.push({\n    //    path: '**', \n    //    redirectTo: '/404'\n    //});\n    \n    routes.push({\n        path: '',\n        redirectTo: '/clinic',\n        pathMatch: 'full'\n    });\n    routes.push({\n        path: 'clinic',\n        loadChildren: () => import('./clinic/clinic.module').then(m => m.ClinicModule),\n        data: { \n            title: Config.CLINIC_TITLE\n        },\n        canActivateChild: [BlockUIPreventNavigation],\n    });\n    routes.push({\n        path: '404', \n        component: NotFoundComponent,\n        canActivateChild: [BlockUIPreventNavigation],\n        data: {\n            title:Config.NOT_FOUND_TITLE\n        }\n    });\n    routes.push({\n        path: '**', \n        redirectTo: '404'\n    });\n}else{\n    console.log('else');\n    routes.push({\n        path: '',\n        redirectTo: '/superadmin',\n        pathMatch: 'full'\n    });\n    routes.push({\n        path: 'superadmin',\n        loadChildren: () => import('./superadmin/superadmin.module').then(m => m.SuperAdminModule),\n        data: { \n            title: Config.SUPERADMIN_TITLE\n        },\n        canActivateChild: [BlockUIPreventNavigation],\n    });\n    routes.push({\n        path: '404', \n        component: NotFoundComponent,\n        canActivateChild: [BlockUIPreventNavigation],\n        data: {\n            title:Config.NOT_FOUND_TITLE\n        }\n    });\n    routes.push({\n        path: '**', \n        redirectTo: '/404'\n    });\n}\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationclinicService } from '../_services/authenticationclinic.service';\nimport { Config } from '../constant';\n@Injectable()\nexport class AuthclinicGuard implements CanActivate {\n    constructor(\n        private authclinicService: AuthenticationclinicService,\n        private router: Router\n    ) {}\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):boolean {\n        let url: string = state.url;\n        return this.checkLogin(url);\n    }\n    checkLogin(url: string): boolean {\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\n        if (!currentUser || !currentUser.id) {\n            this.router.navigate(['/login']);\n            return false; \n        }\n        return true;\n    }\n}","import { Component } from '@angular/core';\n@Component({\n  selector: 'block-element',\n  templateUrl: './block-element.component.html',\n  styleUrls: ['./block-element.component.css']\n})\nexport class BlockElementComponent {\n\n  constructor() { }\n\n}","<h1>MediRecX Block UI Element</h1>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}